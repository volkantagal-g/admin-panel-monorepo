import { createActions } from 'reduxsauce';

import { REDUX_KEY } from '@shared/shared/constants';

export const { Types, Creators } = createActions({
  getThirdPartyCompanyByIdRequest: { id: '' },
  getThirdPartyCompanyByIdSuccess: { data: {} },
  getThirdPartyCompanyByIdFailure: { error: null },
  getCredentialsByCompanyIdRequest: { id: '' },
  getCredentialsByCompanyIdSuccess: { data: {} },
  getCredentialsByCompanyIdFailure: { error: null },
  getAllowedRoutesRequest: null,
  getAllowedRoutesSuccess: { allowedRoutes: [] },
  getAllowedRoutesFailure: { error: null },
  updateThirdPartyCompanyByIdRequest: { body: null },
  updateThirdPartyCompanyByIdSuccess: { data: {} },
  updateThirdPartyCompanyByIdFailure: { error: null },
  deleteThirdPartyCompanyByIdRequest: { id: null },
  deleteThirdPartyCompanyByIdSuccess: { data: {} },
  deleteThirdPartyCompanyByIdFailure: { error: null },
  activateThirdPartyCompanyByIdRequest: null,
  activateThirdPartyCompanyByIdSuccess: { data: {} },
  activateThirdPartyCompanyByIdFailure: { error: null },
  deactivateThirdPartyCompanyByIdRequest: null,
  deactivateThirdPartyCompanyByIdSuccess: { data: {} },
  deactivateThirdPartyCompanyByIdFailure: { error: null },
  createCredentialByCompanyIdRequest: { id: null, environment: null },
  createCredentialByCompanyIdSuccess: { data: {} },
  createCredentialByCompanyIdFailure: { error: null },
  deleteCredentialByCompanyAndCredentialIdRequest: { companyId: null, credentialId: null },
  deleteCredentialByCompanyAndCredentialIdSuccess: { data: {} },
  deleteCredentialByCompanyAndCredentialIdFailure: { error: null },
  activateCredentialByCompanyAndCredentialIdRequest: { companyId: null, credentialId: null },
  activateCredentialByCompanyAndCredentialIdSuccess: { data: {} },
  activateCredentialByCompanyAndCredentialIdFailure: { error: null },
  deactivateCredentialByCompanyAndCredentialIdRequest: { companyId: null, credentialId: null },
  deactivateCredentialByCompanyAndCredentialIdSuccess: { data: {} },
  deactivateCredentialByCompanyAndCredentialIdFailure: { error: null },
  generateCredentialSignatureByCredentialIdRequest: { credentialId: null },
  generateCredentialSignatureByCredentialIdSuccess: { signature: null, credentialId: null },
  generateCredentialSignatureByCredentialIdFailure: { error: null },
  generateCredentialSignatureByCredentialIdClear: { credentialId: null },
  getCompanyChangeLogsRequest: { companyId: null, forceLimit: undefined, forceOffset: undefined },
  getCompanyChangeLogsSuccess: { changeLogs: [] },
  getCompanyChangeLogsFailure: { error: false },
  getCompanyCredentialsChangeLogsRequest: { credentialKey: null, forceLimit: undefined, forceOffset: undefined },
  getCompanyCredentialsChangeLogsSuccess: { changeLogs: [] },
  getCompanyCredentialsChangeLogsFailure: { error: false },
  companyCredentialChangeLogClicked: { credentialKey: '' },
  companyGeneralChangeLogClicked: null,
  companyChangeLogTablePaginationChanged: { limit: 50, offset: 0 },
  initPage: null,
  destroyPage: null,
}, { prefix: `${REDUX_KEY.THIRD_PARTY_COMPANY.DETAIL}_` });
