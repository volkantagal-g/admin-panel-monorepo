export const contractTypeList = [
  {
    _id: '62e11ad2111ddf9b07c10a7e',
    leaveConfig: { numberOfDaysOfHolidayPerWorkingYear: 199, numberOfDaysInAdvanceToGiveHolidayLeaveNotice: 200 },
    compensationConfig: {
      baseHourlyCompensation: 122,
      overtimeHourlyCompensation: 133,
      nightHoursDefinition: ['14:00', '15:00', '02:30'],
      nightHoursCompensation: 166,
      weekendDaysDefinition: [1, 7, 4],
      weekedDaysCompensation: 188,
    },
    breaks: {
      hasMeal: false,
      minConsecutiveHoursToHaveMeal: 88,
      mealLength: 99,
      isMealConpensated: true,
      hasRest: false,
      minConsecutiveHoursToHaveRest: 100,
      restLength: 111,
      isRestConpensated: true,
    },
    schedulingConstraints: {
      maxNumberOfScheduledHoursPerDay: 11,
      maxNumberOfScheduledHoursPerWeek: 22,
      minShiftLength: 33,
      minHoursBetweenTwoConsecutiveShifts: 44,
      maxNumberOfConsecutiveShifts: 55,
      numberOfFreeDaysAfterMaxNumberOfConsecutiveDays: 66,
      minHoursOfWeeklyRest: 77,
    },
    probation: 6,
    domainTypes: [9, 7],
    name: 'Test 1 Updated',
    createdAt: '2022-07-27T11:00:34.227Z',
    updatedAt: '2022-07-27T15:24:10.490Z',
    __v: 0,
  },
  {
    _id: '62e2341f76579336dd81237e',
    leaveConfig: { numberOfDaysOfHolidayPerWorkingYear: 16, numberOfDaysInAdvanceToGiveHolidayLeaveNotice: 17 },
    compensationConfig: {
      baseHourlyCompensation: 12,
      overtimeHourlyCompensation: 13,
      nightHoursDefinition: ['03:30'],
      nightHoursCompensation: 14,
      weekendDaysDefinition: [1],
      weekedDaysCompensation: 15,
    },
    breaks: { hasMeal: true, minConsecutiveHoursToHaveMeal: 8, mealLength: 9, minConsecutiveHoursToHaveRest: 10, restLength: 11, isRestConpensated: true },
    schedulingConstraints: {
      maxNumberOfScheduledHoursPerDay: 1,
      maxNumberOfScheduledHoursPerWeek: 2,
      minShiftLength: 3,
      minHoursBetweenTwoConsecutiveShifts: 4,
      maxNumberOfConsecutiveShifts: 5,
      numberOfFreeDaysAfterMaxNumberOfConsecutiveDays: 6,
      minHoursOfWeeklyRest: 7,
    },
    probation: 4,
    domainTypes: [2],
    name: 'New Test 2',
    createdAt: '2022-07-28T07:00:47.851Z',
    updatedAt: '2022-07-28T07:00:47.851Z',
    __v: 0,
  },
];

export const detailTestRecord = contractTypeList[0];

export const testDetailId = detailTestRecord._id;

export const dynamicForm = {
  _id: '62de5b5237b3a1e621959817',
  formName: 'PERSON_CONTRACT',
  formType: 'CREATE',
  countryCode: 'TR',
  formItems: [
    {
      groupName: '',
      id: 'genInfo',
      columns: 3,
      children: [
        {
          isUi: true,
          isExcel: true,
          componentType: 'input',
          componentName: null,
          initialValue: '',
          name: 'name',
          label: { en: 'Name', tr: 'İsim' },
          placeholder: { en: 'Name', tr: 'İsim' },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'string',
          backendValidationType: 'string',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'dropdown',
          componentName: 'SelectBusinessDomainType',
          componentProps: { mode: 'multiple', maxTagCount: 'responsive' },
          initialValue: null,
          name: 'domainTypes',
          label: { en: 'Business', tr: 'Servis Tipi' },
          placeholder: { en: 'Business', tr: 'Servis Tipi' },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'array',
          backendValidationType: 'array',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'dropdown',
          componentName: null,
          initialValue: '',
          name: 'probation',
          label: { en: 'Probation', tr: 'Deneme Süresi' },
          placeholder: { en: 'Probation', tr: 'Deneme Süresi' },
          options: [
            { label: { en: '1 week(s)', tr: '1 hafta' }, value: 1 },
            { label: { en: '2 week(s)', tr: '2 hafta' }, value: 2 },
            { label: { en: '3 week(s)', tr: '3 hafta' }, value: 3 },
            { label: { en: '4 week(s)', tr: '4 hafta' }, value: 4 },
            { label: { en: '5 week(s)', tr: '5 hafta' }, value: 5 },
            { label: { en: '6 week(s)', tr: '6 hafta' }, value: 6 },
            { label: { en: '7 week(s)', tr: '7 hafta' }, value: 7 },
            { label: { en: '8 week(s)', tr: '8 hafta' }, value: 8 },
            { label: { en: '9 week(s)', tr: '9 hafta' }, value: 9 },
            { label: { en: '10 week(s)', tr: '10 hafta' }, value: 10 },
            { label: { en: '11 week(s)', tr: '11 hafta' }, value: 11 },
            { label: { en: '12 week(s)', tr: '12 hafta' }, value: 12 },
          ],
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
      ],
    },
    {
      groupName: { en: 'Scheduling Constraints', tr: 'Vardiya Konfigürasyonları' },
      id: 'schdConfig',
      columns: 2,
      children: [
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'schedulingConstraints.maxNumberOfScheduledHoursPerDay',
          label: { en: 'Maximum number of scheduler hours per day', tr: 'Bir günde vardilayanabilecek maksimum saat' },
          placeholder: { en: 'Hour', tr: 'Saat' },
          componentProps: { addonAfter: { en: 'Hour', tr: 'Saat' } },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'schedulingConstraints.maxNumberOfScheduledHoursPerWeek',
          label: { en: 'Maximum number of scheduler hours per week', tr: 'Bir haftada vardilayanabilecek maksimum saat' },
          placeholder: { en: 'Hour', tr: 'Saat' },
          componentProps: { addonAfter: { en: 'Hour', tr: 'Saat' } },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'schedulingConstraints.minShiftLength',
          label: { en: 'Minimum shift length', tr: 'Minimum vardiya süresi' },
          placeholder: { en: 'Hour', tr: 'Saat' },
          componentProps: { addonAfter: { en: 'Hour', tr: 'Saat' } },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'schedulingConstraints.minHoursBetweenTwoConsecutiveShifts',
          label: { en: 'Minimum hours between two consecutive shifts', tr: 'İki vardiya arasındaki minimum süre' },
          placeholder: { en: 'Hour', tr: 'Saat' },
          componentProps: { addonAfter: { en: 'Hour', tr: 'Saat' } },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'schedulingConstraints.maxNumberOfConsecutiveShifts',
          label: { en: 'Maximum number of consecutive days', tr: 'Ardışık çalışılabilecek maksimum gün sayısı' },
          placeholder: 'DAYS',
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'schedulingConstraints.numberOfFreeDaysAfterMaxNumberOfConsecutiveDays',
          label: {
            en: 'Number of free days after maximum number of consecutive shifts',
            tr: 'Ardışık çalışılabilecek maksimum günlerden sonra gerekli olan minimum boş gün sayısı',
          },
          placeholder: 'DAYS',
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'schedulingConstraints.minHoursOfWeeklyRest',
          label: { en: 'Minimum hours of weekly rest', tr: 'Haftalık minimum dinlenme molası süresi' },
          placeholder: { en: 'Hour', tr: 'Saat' },
          componentProps: { addonAfter: { en: 'Hour', tr: 'Saat' } },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
      ],
    },
    {
      groupName: { en: 'Breaks', tr: 'Mola' },
      id: 'break',
      columns: 2,
      children: [
        {
          isUi: true,
          isExcel: true,
          componentType: 'checkbox',
          componentName: null,
          initialValue: false,
          name: 'breaks.hasMeal',
          label: { en: 'Meal break allowed', tr: 'Yemek Arası Hakkı' },
          placeholder: { en: 'Meal break allowed', tr: 'Yemek Arası Hakkı' },
          editable: true,
          validations: [],
          validationType: 'bool',
          backendValidationType: 'boolean',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'breaks.minConsecutiveHoursToHaveMeal',
          label: { en: 'Minimum consecutive hours to have meal break', tr: 'Yemek molasına çıkmak için çalışılması gereken minimum süre' },
          placeholder: { en: 'Hour', tr: 'Saat' },
          componentProps: { addonAfter: { en: 'Hour', tr: 'Saat' } },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'breaks.mealLength',
          label: { en: 'Meal break length', tr: 'Yemek Arası Süresi' },
          placeholder: { en: 'Hour', tr: 'Saat' },
          componentProps: { addonAfter: { en: 'Hour', tr: 'Saat' } },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'checkbox',
          componentName: null,
          initialValue: false,
          name: 'breaks.isMealConpensated',
          label: { en: 'Meal break compensated', tr: 'Yemek Arası Ödemesi' },
          placeholder: { en: 'Meal break compensated', tr: 'Yemek Arası Ödemesi' },
          editable: true,
          validations: [],
          validationType: 'bool',
          backendValidationType: 'boolean',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'checkbox',
          componentName: null,
          initialValue: false,
          name: 'breaks.hasRest',
          label: { en: 'Rest break allowed', tr: 'Dinlenme Arası' },
          placeholder: { en: 'Rest break allowed', tr: 'Dinlenme Arası' },
          editable: true,
          validations: [],
          validationType: 'bool',
          backendValidationType: 'boolean',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'breaks.minConsecutiveHoursToHaveRest',
          label: { en: 'Minimum consecutive hours to have rest break', tr: 'Dinlenme molasına çıkmak için çalışılması gereken minimum süre' },
          placeholder: { en: 'Hour', tr: 'Saat' },
          componentProps: { addonAfter: { en: 'Hour', tr: 'Saat' } },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'breaks.restLength',
          label: { en: 'Rest break length', tr: 'Dinlenme Arası Süresi' },
          placeholder: { en: 'Hour', tr: 'Saat' },
          componentProps: { addonAfter: { en: 'Hour', tr: 'Saat' } },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'checkbox',
          componentName: null,
          initialValue: false,
          name: 'breaks.isRestConpensated',
          label: { en: 'Rest compensated', tr: 'Dinlenme Arası Ödemesi' },
          placeholder: { en: 'Rest compensated', tr: 'Dinlenme Arası Ödemesi' },
          editable: true,
          validations: [],
          validationType: 'bool',
          backendValidationType: 'boolean',
        },
      ],
    },
    {
      groupName: { en: 'Compensation Configuration', tr: 'Ödeme Konfigürasyonları' },
      id: 'compConfig',
      columns: 2,
      children: [
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'compensationConfig.baseHourlyCompensation',
          label: { en: 'Base hourly compensation', tr: 'Saatlik Ücret' },
          placeholder: 'AMOUNT',
          componentProps: { addonAfter: '$' },
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'compensationConfig.overtimeHourlyCompensation',
          label: { en: 'Overtime hourly compensation', tr: 'Fazla Mesai Saatlik Ücreti”' },
          componentProps: { addonAfter: '%' },
          placeholder: '%',
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'dropdown',
          componentName: null,
          initialValue: '',
          name: 'compensationConfig.nightHoursDefinition',
          label: {
            en: 'Night hours definition (Select specific hours in the day)',
            tr: 'Gece Saati Tanımlaması (Gece saati olarak tanımlamak istediğiniz saatleri seçin)',
          },
          placeholder: {
            en: 'Night hours definition (Select specific hours in the day)',
            tr: 'Gece Saati Tanımlaması (Gece saati olarak tanımlamak istediğiniz saatleri seçin)',
          },
          editable: true,
          componentProps: { mode: 'multiple', maxTagCount: 'responsive' },
          options: [
            { label: { en: '00:00', tr: '00:00' }, value: '00:00' },
            { label: { en: '00:30', tr: '00:30' }, value: '00:30' },
            { label: { en: '01:00', tr: '01:00' }, value: '01:00' },
            { label: { en: '22:30', tr: '22:30' }, value: '22:30' },
            { label: { en: '23:00', tr: '23:00' }, value: '23:00' },
            { label: { en: '23:30', tr: '23:30' }, value: '23:30' },
          ],
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'array',
          backendValidationType: 'array',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'compensationConfig.nightHoursCompensation',
          label: { en: 'Night hours compensation', tr: 'Gece Saatleri Ödemesi' },
          componentProps: { addonAfter: '%' },
          placeholder: '%',
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'dropdown',
          componentName: null,
          initialValue: '',
          name: 'compensationConfig.weekendDaysDefinition',
          label: {
            en: 'Weekend days definition (Select specific days in the week)',
            tr: 'Haftasonu Tanımlaması (Haftasonu olarak tanımlamak istediğiniz günleri seçin)',
          },
          placeholder: {
            en: 'Weekend days definition (Select specific days in the week)',
            tr: 'Haftasonu Tanımlaması (Haftasonu olarak tanımlamak istediğiniz günleri seçin)',
          },
          editable: true,
          componentProps: { mode: 'multiple', maxTagCount: 'responsive' },
          options: [
            { label: { tr: 'Pazartesi', en: 'Monday' }, value: 1 },
            { label: { tr: 'Salı', en: 'Tuesday' }, value: 2 },
            { label: { tr: 'Çarşamba', en: 'Wednesday' }, value: 3 },
            { label: { tr: 'Perşembe', en: 'Thursday' }, value: 4 },
            { label: { tr: 'Cuma', en: 'Friday' }, value: 5 },
            { label: { tr: 'Cumartesi', en: 'Saturday' }, value: 6 },
            { label: { tr: 'Pazar', en: 'Sunday' }, value: 7 },
          ],
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'array',
          backendValidationType: 'array',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'compensationConfig.weekedDaysCompensation',
          label: { en: 'Weekend days compensation', tr: 'Haftasonumu Ödemesi' },
          componentProps: { addonAfter: '%' },
          placeholder: '%',
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
      ],
    },
    {
      groupName: { en: 'Leave configuration', tr: 'İzin Konfigürasyonları' },
      id: 'leave',
      columns: 2,
      children: [
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'leaveConfig.numberOfDaysOfHolidayPerWorkingYear',
          label: { en: 'Number of days of holiday per working year', tr: 'Yıllık izin hakkı' },
          placeholder: 'DAYS',
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
        {
          isUi: true,
          isExcel: true,
          componentType: 'inputNumber',
          componentName: null,
          initialValue: '',
          name: 'leaveConfig.numberOfDaysInAdvanceToGiveHolidayLeaveNotice',
          label: { en: 'Number of days in advance to give holiday leave notice', tr: 'Yıllık izinden kaç gün önce izin talebi gönderilmeli' },
          placeholder: 'DAYS',
          editable: true,
          validations: [{ type: 'required', params: { en: 'Required', tr: 'Zorunlu' } }],
          validationType: 'number',
          backendValidationType: 'number',
        },
      ],
    },
  ],
  dependencyList: {},
  additionalFields: [],
};
