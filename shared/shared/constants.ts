export { COUNTRIES } from './countryList';

export const RESTART_ON_REMOUNT = '@@saga-injector/restart-on-remount';
export const DAEMON = '@@saga-injector/daemon';
export const ONCE_TILL_UNMOUNT = '@@saga-injector/once-till-unmount';
export const FIRST_ROW_CLASS_NAME = 'firstRow';

export const LOCAL_DATE_FORMAT: Record<string, string> = {
  TR: 'DD/MM/YYYY',
  EN: 'YYYY/MM/DD',
};

export const REDUX_KEY = {
  APP_LAYOUT: 'APP_LAYOUT',
  CUSTOMER_SATISFACTION_REQUEST: { NEW: 'CUSTOMER_SATISFACTION_REQUEST_NEW' },
  INIT: 'INIT',
  LOADING_BAR: 'LOADING_BAR',
  FILTER: 'FILTER',
  UI: 'UI',
  AUTH: 'AUTH',
  TOAST: 'TOAST',
  LANGUAGE_SELECTION: 'LANGUAGE_SELECTION',
  COUNTRY_SELECTION: 'COUNTRY_SELECTION',
  COMMON: 'COMMON',
  CORE: 'CORE',
  SIDEBAR: 'SIDEBAR',
  EXCLUDE_PROMO_PRODUCTS: 'EXCLUDE_PROMO_PRODUCTS',
  COMPANY: { KPI_DICTIONARY: 'COMPANY_KPI_DICTIONARY' },
  PERSONAL_PROMO: {
    GENERATOR: 'PERSONAL_PROMO_GENERATOR',
    NEW: 'PERSONAL_PROMO_NEW',
    LIST: 'PERSONAL_PROMO_LIST',
  },
  PERSON_CONTRACT: {
    LIST: 'PERSON_CONTRACT_LIST',
    DETAIL: 'PERSON_CONTRACT_DETAIL',
  },
  WORKFORCE_EMPLOYEE_LEAVE_MANAGEMENT: 'WORKFORCE_EMPLOYEE_LEAVE_MANAGEMENT',
  TRANSFER_GROUP: {
    LIST: 'TRANSFER_GROUP_LIST',
    DETAIL: 'TRANSFER_GROUP_DETAIL',
    NEW: 'TRANSFER_GROUP_NEW',
  },
  THIRD_PARTY_COMPANY: {
    LIST: 'THIRD_PARTY_COMPANY_LIST',
    DETAIL: 'THIRD_PARTY_COMPANY_DETAIL',
    NEW: 'THIRD_PARTY_COMPANY_NEW',
  },
  SUPPLIER: {
    LIST: 'SUPPLIER_LIST',
    DETAIL: 'SUPPLIER_DETAIL',
    NEW: 'SUPPLIER_NEW',
  },
  BRAND: {
    LIST: 'BRAND_LIST',
    DETAIL: 'BRAND_DETAIL',
    NEW: 'BRAND_NEW',
  },
  USER: {
    LIST: 'USER_LIST',
    DETAIL: 'USER_DETAIL',
    NEW: 'USER_NEW',
    WEBHELP_MATCHING: 'WEBHELP_MATCHING',
    EXTERNAL_CUSTOMER_SERVICES_PANEL_ACCOUNT_MANAGEMENT:
      'EXTERNAL_CUSTOMER_SERVICES_PANEL_ACCOUNT_MANAGEMENT',
  },
  ASSET: { LIST: 'ASSET_LIST', NEW: 'ASSET_NEW', DETAIL: 'ASSET_DETAIL', DASHBOARD: 'IT_ASSET_DASHBOARD' },
  PAGE: {
    LIST: 'PAGE_LIST',
    DETAIL: 'PAGE_DETAIL',
    NEW: 'PAGE_NEW',
  },
  PANEL_DOC: {
    SEARCH: 'PAGE_PANEL_DOC_SEARCH',
    DETAIL: 'PAGE_PANEL_DOC_DETAIL',
  },
  ROLE: {
    LIST: 'ROLE_LIST',
    DETAIL: 'ROLE_DETAIL',
    NEW: 'ROLE_NEW',
  },
  COMPONENT: {
    DETAIL: 'COMPONENT_DETAIL',
    NEW: 'COMPONENT_NEW',
  },
  MARKET: { BUSINESS_CONFIG: 'MARKET_BUSINESS_CONFIG' },
  MARKET_PRODUCT: {
    LIST: 'MARKET_PRODUCT_LIST',
    DETAIL: 'MARKET_PRODUCT_DETAIL',
    NEW: 'MARKET_PRODUCT_NEW',
    SORT: 'MARKET_PRODUCT_SORT',
    CATEGORY: {
      LIST: 'MARKET_PRODUCT_CATEGORY_LIST',
      DETAIL: 'MARKET_PRODUCT_CATEGORY_DETAIL',
      NEW: 'MARKET_PRODUCT_CATEGORY_NEW',
      SORT: 'MARKET_PRODUCT_CATEGORY_SORT',
      VISIBILITY: {
        LIST: 'MARKET_PRODUCT_CATEGORY_VISIBILITY_LIST',
        DETAIL: 'MARKET_PRODUCT_CATEGORY_VISIBILITY_DETAIL',
        NEW: 'MARKET_PRODUCT_CATEGORY_VISIBILITY_NEW',
      },
    },
    SUB_CATEGORY: { SORT: 'MARKET_PRODUCT_SUB_CATEGORY_SORT' },
    BADGE: {
      LIST: 'MARKET_PRODUCT_BADGE_LIST',
      DETAIL: 'MARKET_PRODUCT_BADGE_DETAIL',
      NEW: 'MARKET_PRODUCT_BADGE_NEW',
    },
    GROUP: {
      LIST: 'MARKET_PRODUCT_GROUP_LIST',
      DETAIL: 'MARKET_PRODUCT_GROUP_DETAIL',
      NEW: 'MARKET_PRODUCT_GROUP_NEW',
      COMMON: 'MARKET_PRODUCT_GROUP_COMMON',
    },
    MASTER_CATEGORY: {
      LIST: 'MARKET_PRODUCT_MASTER_CATEGORY_LIST',
      DETAIL: 'MARKET_PRODUCT_MASTER_CATEGORY_DETAIL',
      NEW: 'MARKET_PRODUCT_MASTER_CATEGORY_NEW',
    },
    FAMILY: 'MARKET_PRODUCT_FAMILY',
    WAREHOUSE_PRICING_TIERS: 'MARKET_PRODUCT_WAREHOUSE_PRICING_TIERS',
    PRICING: 'PRICING',
    RECIPES: {
      LIST: 'MARKET_PRODUCT_RECIPES_LIST',
      DETAIL: 'MARKET_PRODUCT_RECIPES_DETAIL',
      SORT: 'MARKET_PRODUCT_RECIPES_SORT',
    },
  },
  PLANOGRAM: {
    CATEGORIES: 'PLANOGRAM_CATEGORIES',
    PLANOGRAMS: 'PLANOGRAMS',
    PLANOGRAM_COMMON: 'PLANOGRAM_COMMON',
    WAREHOUSES: 'WAREHOUSES',
    PRODUCTS: 'PRODUCTS',
  },
  WAREHOUSE: {
    LIST: 'WAREHOUSE_LIST',
    DETAIL: 'WAREHOUSE_DETAIL',
    NEW: 'WAREHOUSE_NEW',
    LIVE_MAP: 'WAREHOUSE_LIVE_MAP',
  },
  PICKER: {
    DETAIL: 'PICKER_DETAIL',
    LIST: 'PICKER_LIST',
    CRISIS_MGMT: 'PICKER_CRISIS_MGMT',
  },
  WAREHOUSE_PROPOSAL: {
    LIST: 'WAREHOUSE_PROPOSAL_LIST',
    DETAIL: 'WAREHOUSE_PROPOSAL_DETAIL',
    CREATE: 'WAREHOUSE_PROPOSAL_CREATE',
    SELECT: {
      DISTRICT: 'WAREHOUSE_PROPOSAL_SELECT_DISTRICT',
      NEIGHBORHOOD: 'WAREHOUSE_PROPOSAL_SELECT_NEIGHBORHOOD',
    },
  },
  EMPLOYEE: {
    SELECT: {
      DEPARTMENT: 'EMPLOYEE_SELECT_DEPARTMENT',
      LOCATION: 'EMPLOYEE_SELECT_LOCATION',
      JOB_FAMILY: 'EMPLOYEE_SELECT_JOB_FAMILY',
      BUSINESS_UNIT: 'EMPLOYEE_SELECT_BUSINESS_UNIT',
      COMPANY: 'EMPLOYEE_SELECT_COMPANY',
      CITY: 'EMPLOYEE_SELECT_CITY_OF_COUNTRY',
      BUSINESS_PARTNERS: 'EMPLOYEE_SELECT_BUSINESS_PARTNERS',
    },
    MODAL: { PERMIT: { DETAIL: 'EMPLOYEE_PERMIT_DETAIL_MODAL' } },
    HOME: 'EMPLOYEE_HOME',
    PERMIT: { LIST: 'EMPLOYEE_PERMIT_LIST' },
    MANAGER_OF_EMPLOYEE: 'EMPLOYEE_MANAGER_OF_EMPLOYEE',
    LIST: 'EMPLOYEE_LIST',
    DETAIL: 'EMPLOYEE_DETAIL',
    NEW: 'EMPLOYEE_NEW',
    DETAIL_ASSET_LIST: 'EMPLOYEE_DETAIL_ASSET_LIST',
    OFFICE_ATTENDANCE_TRACKING: {
      CAPACITY_MANAGEMENT: 'EMPLOYEE_OFFICE_ATTENDANCE_TRACKING_CAPACITY_MANAGEMENT',
      DASHBOARD: 'EMPLOYEE_OFFICE_ATTENDANCE_TRACKING_DASHBOARD',
      EMPLOYEE_TRANSACTIONS: 'EMPLOYEE_OFFICE_ATTENDANCE_TRACKING_EMPLOYEE_TRANSACTIONS',
      TREND: 'EMPLOYEE_OFFICE_ATTENDANCE_TRACKING_TREND',
    },
    LOGS: 'EMPLOYEE_LOGS',
  },
  ASSET_MANAGEMENT: {
    LIST: 'ASSET_MANAGEMENT_LIST',
    DETAIL: 'ASSET_MANAGEMENT_DETAIL',
    NEW: 'ASSET_MANAGEMENT_NEW',
    LOGS: 'ASSET_MANAGEMENT_LOGS',
    UPLOAD: 'ASSET_MANAGEMENT_UPLOAD',
  },
  MENTORSHIP: {
    USER: 'MENTORSHIP_USER',
    SEARCH: 'MENTORSHIP_SEARCH',
    BUTTON: {
      ADD_NEW_MENTORSHIP_COURSE: 'MENTORSHIP_ADD_NEW_COURSE',
      DECLINE_MENTORSHIP: 'MENTORSHIP_DECLINE_BUTTON',
      REQUEST_MENTORSHIP: 'MENTORSHIP_REQUEST_BUTTON',
      WITHDRAW_MENTORSHIP: 'MENTORSHIP_WITHDRAW_BUTTON',
      ADD_NEW_MENTORSHIP_TODO: 'MENTORSHIP_ADD_NEW_TODO',
      ADD_NEW_MENTORSHIP_SESSION_NOTE: 'MENTORSHIP_ADD_NEW_SESSION_NOTE',
      FINISH_MENTORSHIP: 'MENTORSHIP_FINISH',
    },
    UPLOAD_PICTURE: 'MENTORSHIP_UPLOAD_PICTURE',
    SELECT: { TOPIC: 'MENTORSHIP_SELECT_TOPIC', MENTOR: 'MENTORSHIP_SELECT_MENTOR' },
    COURSE: { LIST: 'MENTORSHIP_COURSE_LIST', DETAIL: 'MENTORSHIP_COURSE_DETAIL' },
    REQUEST: {
      MATCHES: 'MENTORSHIP_REQUEST_MATCHES',
      STATUS: 'MENTORSHIP_REQUEST_STATUS',
      LIST: 'MENTORSHIP_REQUEST_LIST',
      DETAIL: 'MENTORSHIP_REQUEST_DETAIL',
    },
    MENTOR: { DETAIL: 'MENTORSHIP_MENTOR_DETAIL', COURSE: 'MENTORSHIP_MENTOR_DETAIL_COURSES' },
    TODO: 'MENTORSHIP_TODO',
    SESSION_NOTE: 'MENTORSHIP_SESSION_NOTE',
  },
  COURIER: {
    LIST: 'COURIER_LIST',
    DETAIL: 'COURIER_DETAIL',
    CRISIS_MGMT: 'COURIER_CRISIS_MGMT',
  },
  COURIER_STATUS_AND_BUSY: { LIST: 'COURIER_STATUS_AND_BUSY_LIST' },
  COURIER_FEEDBACK: { LIST: 'COURIER_FEEDBACK_LIST' },
  COURIER_LOYALTY: { LIST: 'COURIER_LOYALTY_LIST' },
  COURIER_GAMIFICATION_TASK: {
    LIST: 'COURIER_GAMIFICATION_TASK_LIST',
    DETAIL: 'COURIER_GAMIFICATION_TASK_DETAIL',
    SUMMARY: 'COURIER_GAMIFICATION_TASK_SUMMARY',
    CREATE: 'COURIER_GAMIFICATION_TASK_CREATE',
    SELECT_KPI: 'COURIER_GAMIFICATION_SELECT_KPI',
    HISTORY: 'COURIER_GAMIFICATION_HISTORY',
  },
  EMPLOYEE_ASSET: { LIST: 'EMPLOYEE_ASSET_LIST' },
  MARKET_FRANCHISE: {
    COMMON: 'MARKET_FRANCHISE_COMMON',
    LIST: 'MARKET_FRANCHISE_LIST',
    DETAIL: 'MARKET_FRANCHISE_DETAIL',
    NEW: 'MARKET_FRANCHISE_NEW',
    USER: {
      NEW: 'MARKET_FRANCHISE_USER_NEW',
      LIST: 'MARKET_FRANCHISE_USER_LIST',
      DETAIL: 'MARKET_FRANCHISE_USER_DETAIL',
      ROLE: {
        NEW: 'MARKET_FRANCHISE_USER_ROLE_NEW',
        LIST: 'MARKET_FRANCHISE_USER_ROLE_LIST',
        DETAIL: 'MARKET_FRANCHISE_USER_ROLE_DETAIL',
      },
      ROLE_GROUP: {
        LIST: 'MARKET_FRANCHISE_USER_ROLE_GROUP_LIST',
        NEW: 'MARKET_FRANCHISE_USER_ROLE_GROUP_NEW',
        DETAIL: 'MARKET_FRANCHISE_USER_ROLE_GROUP_DETAIL',
      },
    },
  },
  LOCATION_WRITE_OFF: {
    NEW: 'LOCATION_WRITE_OFF_NEW',
    DETAIL: 'LOCATION_WRITE_OFF_DETAIL',
    LIST: 'LOCATION_WRITE_OFF_LIST',
  },
  FIELD_ANNOUNCEMENT: {
    CREATE: 'FIELD_ANNOUNCEMENT_CREATE',
    LIST: 'FIELD_ANNOUNCEMENT_LIST',
    LIST_BY_WAREHOUSE: 'FIELD_ANNOUNCEMENT_LIST_BY_WAREHOUSE',
    DETAIL: 'FIELD_ANNOUNCEMENT_DETAIL',
  },
  CONFIG: {
    LIST: 'CONFIG_LIST',
    LOG: 'CONFIG_LOG',
    NEW: 'CONFIG_NEW',
    MOBILE_ANIMATION: 'CONFIG_MOBILE_ANIMATION',
    WORKING_HOURS: 'CONFIG_WORKING_HOURS',
    PEAK_HOURS: 'CONFIG_PEAK_HOURS',
  },
  POLYGON: { MAP: 'POLYGON_MAP' },
  GIS: {
    HEATMAP: 'GIS_HEATMAP',
    BANNED_AREAS: 'GIS_BANNED_AREAS',
    MAPS: 'GIS_MAPS',
    LOCATION_INTELLIGENCE: 'LOCATION_INTELLIGENCE',
    WEATHER_MAP: 'WEATHER_MAP',
    ADDRESS_SEARCH: 'ADDRESS_SERACH',
    COUNTRY_CITY_MANAGEMENT: 'COUNTRY_CITY_MANAGEMENT',
  },
  SERVICE_AVAILABILITY_AREA: {
    LIST: 'SERVICE_AVAILABILITY_AREA_LIST',
    DETAIL: 'SERVICE_AVAILABILITY_AREA_DETAIL',
    EDIT: 'SERVICE_AVAILABILITY_AREA_EDIT',
    NEW: 'SERVICE_AVAILABILITY_AREA_NEW',
  },
  FRANCHISE_DYNAMIC_CONFIG: {
    LIST: 'FRANCHISE_DYNAMIC_CONFIG_LIST',
    NEW: 'FRANCHISE_DYNAMIC_CONFIG_NEW',
    DETAIL: 'FRANCHISE_DYNAMIC_CONFIG_DETAIL',
  },
  FRANCHISE_CONFIG: {
    LIST: 'FRANCHISE_CONFIG_LIST',
    NEW: 'FRANCHISE_CONFIG_NEW',
    DETAIL: 'FRANCHISE_CONFIG_DETAIL',
  },
  HELPER: { HELPER_COUNTRY_SELECTION_MODAL: 'HELPER_COUNTRY_SELECTION_MODAL' },
  SELECT: {
    FRANCHISE: 'SELECT_FRANCHISE',
    FRANCHISES_AREAS: 'SELECT_FRANCHISES_AREAS',
    PERSON: 'SELECT_PERSON',
    WAREHOUSES: 'SELECT_WAREHOUSES',
    COUNTRY_DIALING_CODE: 'SELECT_COUNTRY_DIALING_CODE',
    DDS_CRITERIA: 'SELECT_DDS_CRITERIA',
    USER: 'SELECT_USER',
    UNIQUE_IDENTIFIER: 'SELECT_UNIQUE_IDENTIFIER',
    ROLE: 'SELECT_ROLE',
    MARKET_PRODUCT_BRAND: 'SELECT_MARKET_PRODUCT_BRAND',
    MARKET_PRODUCT_CATEGORY: 'SELECT_MARKET_PRODUCT_CATEGORY',
    MARKET_PRODUCT_MASTER_CATEGORY: 'SELECT_MARKET_PRODUCT_MASTER_CATEGORY',
    QUALITY_DEPARTMENT_PEOPLE: 'QUALITY_DEPARTMENT_PEOPLE',
    RESTAURANT: 'SELECT_RESTAURANT',
    MARKET_PRODUCT: 'SELECT_MARKET_PRODUCT',
    MARKET_PRODUCT_TO_BE_REFACTORED_BY_PROMO_SQUAD:
      'MARKET_PRODUCT_TO_BE_REFACTORED_BY_PROMO_SQUAD',
    MARKET_PRODUCT_SUB_CATEGORY: 'MARKET_PRODUCT_SUB_CATEGORY',
    CHAIN_RESTAURANT: 'SELECT_CHAIN_RESTAURANT',
    CRISIS_TOPIC: 'SELECT_CRISIS_TOPIC',
    EMPLOYEE: 'SELECT_EMPLOYEE',
    DEPARTMENT: 'SELECT_DEPARTMENT',
    REPORTERS: 'SELECT_REPORTERS',
    PROMOS: 'SELECT_PROMOS',
    ANNOUNCEMENTS: 'SELECT_ANNOUNCEMENTS',
    ARTISAN_STORE: 'SELECT_ARTISAN_STORE',
    LOCALS_MERCHANT: 'SELECT_LOCALS_MERCHANT',
    LOCALS_MERCHANT_TYPE: 'SELECT_LOCALS_MERCHANT_TYPE',
    LOCALS_CHAIN: 'SELECT_LOCALS_CHAIN',
    CALLBACK_PROPERTY: 'SELECT_CALLBACK_PROPERTY',
    CATEGORY: 'CATEGORY',
  },
  BUTTON: { NEW_PRODUCT: 'BUTTON_NEW_PRODUCT', NEW_PRODUCT_FAMILY: 'BUTTON_NEW_PRODUCT_FAMILY' },
  DDS: {
    OBJECTION: {
      LIST: 'DDS_OBJECTION_LIST',
      DETAIL: 'DDS_OBJECTION_DETAIL',
    },
  },
  KDS: {
    SELECT_AUDIT_FORM_TYPE: 'KDS_SELECT_AUDIT_FORM_TYPE',
    QUESTION_GROUP: {
      LIST: 'KDS_QUESTION_GROUP_LIST',
      NEW: 'KDS_QUESTION_GROUP_NEW',
      DETAIL: 'KDS_QUESTION_GROUP_DETAIL',
    },
    AUDIT_FORM_TYPE: {
      DETAIL: 'KDS_AUDIT_FORM_TYPE_DETAIL',
      LIST: 'KDS_AUDIT_FORM_TYPE_LIST',
      NEW: 'KDS_AUDIT_FORM_TYPE_NEW',
    },
    QUESTION: {
      SELECT_QUESTION_GROUP: 'SELECT_QUESTION_GROUP',
      SELECT_SCORE_MAPPING: 'SELECT_SCORE_MAPPING',
      NEW: 'KDS_QUESTION_NEW',
      LIST: 'KDS_QUESTION_LIST',
      DETAIL: 'KDS_QUESTION_DETAIL',
    },
    SCORE_MAPPING: 'SCORE_MAPPING',
    STORE_AUDIT: {
      NEW: 'KDS_STORE_AUDIT_NEW',
      LIST: 'KDS_STORE_AUDIT_LIST',
      DETAIL: 'KDS_STORE_AUDIT_DETAIL',
    },
  },
  CONTENT_UPLOAD: { S3: 'CONTENT_UPLOAD_S3' },
  CONTENT_CREATION: 'CONTENT_CREATION',
  PROMO: {
    BADGES: 'PROMO_BADGES_LIST',
    LIST: 'PROMO_LIST',
    BULK: 'PROMO_BULK',
    NEW: 'PROMO_NEW',
    DETAIL: 'PROMO_DETAIL',
    PERSONAL_DETAIL: 'PROMO_PERSONAL_DETAIL',
    PRODUCT_SELECT: 'PROMO_PRODUCT_SELECT',
  },
  SEGMENT: {
    DETAIL: 'SEGMENT_DETAIL',
    LIST: 'SEGMENT_LIST',
    NEW: 'SEGMENT_NEW',
    FRAUD_MANAGEMENT: 'FRAUD_MANAGEMENT',
  },
  DTS: {
    GENERAL: {
      LIST: 'DTS_LIST',
      NEW: 'DTS_NEW',
      DETAIL: 'DTS_DETAIL',
      SELECT_RULE: 'DTS_SELECT_RULE',
      SELECT_FEEDBACK_SOURCE: 'DTS_SELECT_FEEDBACK_SOURCE',
      SELECT_EMPLOYEE: 'DTS_SELECT_EMPLOYEE',
    },
    SUMMARY: 'DTS_SUMMARY',
    UPLOAD: 'DTS_LOGS_UPDATE',
    RULE: {
      NEW: 'DTS_RULE_NEW',
      LIST: 'DTS_RULE_LIST',
      DETAIL: 'DTS_RULE_DETAIL',
      SELECT_CATEGORY: 'SELECT_CATEGORY',
      SELECT_PRIORITY: 'SELECT_PRIORITY',
    },
  },
  DTS_SETTING: {
    CATEGORY: {
      LIST: 'DTS_CATEGORY_SETTING_LIST',
      NEW: 'DTS_CATEGORY_SETTING_NEW',
      DETAIL: 'DTS_CATEGORY_SETTING_DETAIL',
    },
    FEEDBACK_SOURCE: {
      LIST: 'DTS_FEEDBACK_SOURCE_SETTING_LIST',
      NEW: 'DTS_FEEDBACK_SOURCE_SETTING_NEW',
      DETAIL: 'DTS_FEEDBACK_SOURCE_SETTING_DETAIL',
    },
    PRIORITY: {
      LIST: 'DTS_PRIORITY_SETTING_LIST',
      NEW: 'DTS_PRIORITY_SETTING_NEW',
      DETAIL: 'DTS_PRIORITY_SETTING_DETAIL',
    },
  },
  LIVE_MONITORING: {
    LIST: 'LIVE_MONITORING_LIST',
    OPERATIONS: 'LIVE_MONITORING_OPERATIONS',
    COURIER_LIVE_MONITORING: 'COURIER_LIVE_MONITORING',
    LOCALS: { COURIER: 'LOCALS_LIVE_MONITORING_COURIER' },
  },
  DAILY_TRACKING: {
    INSTANT: 'DAILY_TRACKING_INSTANT',
    ORDER: 'DAILY_TRACKING_ORDER',
  },
  FOOD: {
    LIVE_MAP: 'FOOD_LIVE_MAP',
    ACTIVE_ORDER_SUMMARY: 'ACTIVE_ORDER_SUMMARY',
    FINANCIAL_DASHBOARD_V2: 'FINANCIAL_DASHBOARD_V2',
    FINANCIAL_DASHBOARD_V2_DETAIL: 'FINANCIAL_DASHBOARD_V2_DETAIL',
    MEAL_CARD_RECONCILIATION: 'MEAL_CARD_RECONCILIATION',
    ERP_DATA_TRACKING_V2: 'ERP_DATA_TRACKING_V2',
    RESTAURANT_EXTERNAL_TRANSACTION: 'RESTAURANT_EXTERNAL_TRANSACTION',
    RESTAURANT_PAYBACK_STATUS: 'RESTAURANT_PAYBACK_STATUS',
    FINANCIAL_CONFIGS: 'FINANCIAL_CONFIGS',
    WITHHOLDING_TAX_REPORTS: 'WITHHOLDING_TAX_REPORTS',
  },
  LOCALS: { WITHHOLDING_TAX_REPORTS: 'LOCALS_WITHHOLDING_TAX_REPORTS' },
  BASKET_ORDER: { DETAIL: 'GETIR_FOOD_BASKET_DETAIL' },
  BASKET_CONFIG: { DETAIL: 'GETIR_MARKET_BASKET_CONFIG_DETAILS' },
  FOOD_ORDER: {
    ACTIVE: 'GETIR_FOOD_ORDER_ACTIVE',
    FILTER: 'GETIR_FOOD_ORDER_FILTER',
    DETAIL: 'GETIR_FOOD_ORDER_DETAIL',
  },
  ARTISAN: { LIVE_MAP: 'ARTISAN_LIVE_MAP' },
  PERSON: {
    LIST: 'PERSON_LIST',
    NEW: 'PERSON_NEW',
    DETAIL: 'PERSON_DETAIL',
  },
  WORKFORCE_REPORTS: 'WORKFORCE_REPORTS',
  SLOT_PLAN_MANAGEMENT: 'SLOT_PLAN_MANAGEMENT',
  TIMESHEET_LOCK: 'TIMESHEET_LOCK',
  TIMESHEET_LOGS: 'TIMESHEET_LOGS',
  PERSON_REQUEST: {
    STATUS: {
      LIST: 'PERSON_REQUEST_STATUS_LIST',
      DETAIL: 'PERSON_REQUEST_STATUS_DETAIL',
    },
  },
  PERSON_CANDIDATE: {
    LIST: 'PERSON_CANDIDATE_LIST',
    DETAIL: 'PERSON_CANDIDATE_DETAIL',
  },
  ARTISAN_ORDER: {
    FILTER: 'ARTISAN_ORDER_FILTER',
    ACTIVE: 'ARTISAN_ORDER_ACTIVE',
    DETAIL: 'ARTISAN_ORDER_DETAIL',
  },
  FRANCHISE_EARNINGS: {
    LIST: 'FRANCHISE_EARNINGS_LIST',
    UPLOAD: 'FRANCHISE_EARNINGS_UPLOAD',
  },
  FRANCHISE_BILL_MANAGEMENT: {
    LIST: 'FRANCHISE_BILL_MANAGEMENT_LIST',
    DETAIL: 'FRANCHISE_BILL_MANAGEMENT_DETAIL',
  },
  CLIENT_TARGETING: 'CLIENT_TARGETING',
  STAFF_PLAN_PUBLICATION: 'STAFF_PLAN_PUBLICATION',
  MARKET_ORDER_ANALYTICS: {
    ACTIVE_ORDERS_FOR_OPERATION:
      'MARKET_ORDER_ANALYTICS_ACTIVE_ORDERS_FOR_OPERATION',
    ACTIVE_ORDERS_FOR_MANAGEMENT:
      'MARKET_ORDER_ANALYTICS_ACTIVE_ORDERS_FOR_MANAGEMENT',
    ACTIVE_ORDERS_FOR_EXECUTIVE_DASHBOARD:
      'MARKET_ORDER_ANALYTICS_ACTIVE_ORDERS_FOR_EXECUTIVE_DASHBOARD',
    ACTIVE_ORDERS_FOR_GROWTH: 'ACTIVE_ORDERS_FOR_GROWTH',
    ACTIVE_ORDERS_FOR_CUSTOMER_SERVICES: 'ACTIVE_ORDERS_FOR_CUSTOMER_SERVICES',
    FRAUD_SUSPICION_ORDERS: 'FRAUD_SUSPICION_ORDERS',
  },
  MARKET_ORDER: {
    ORDER_DETAIL: 'ORDER_DETAIL',
    ORDER_FILTER: 'ORDER_FILTER',
    MISSING_PRODUCTS: 'MISSING_PRODUCTS',
  },
  BAG_CONSTRAINTS: 'BAG_CONSTRAINTS',
  REPORTS: {
    REPORTS: 'REPORTS',
    REPORTS_NEW: 'REPORTS_NEW',
    REPORT_TYPES: 'REPORT_TYPES',
    REPORT_TYPES_NEW: 'REPORT_TYPES_NEW',
    REPORT_TYPES_DETAIL: 'REPORT_TYPES_DETAIL',
    REPORT_TAGS: 'REPORT_TAGS',
    REPORT_TAGS_NEW: 'REPORT_TAGS_NEW',
    REPORT_TAGS_DETAIL: 'REPORT_TAGS_DETAIL',
  },
  CLIENT_LIST_DOUBLE_CHECKER: 'CLIENT_LIST_DOUBLE_CHECKER',
  GL_RUNNER_DETAIL: 'GL_RUNNER_DETAIL',
  GL_RUNNER_LIST: 'GL_RUNNER_LIST',
  GL_RUNNER_NEW: 'GL_RUNNER_NEW',
  GL_GROWTH_COMPARISON: 'GL_GROWTH_COMPARISON',
  GL_RETURN: {
    ALERT: 'GL_RETURN_ALERT',
    DETAIL: 'GL_RETURN_ALERT_DETAIL',
  },
  GL_ERP_DATA_TRACKING: 'GL_ERP_DATA_TRACKING',
  GL_SHOP_EXTERNAL_TRANSACTION: 'GL_SHOP_EXTERNAL_TRANSACTION',
  GL_SHOP_PAYBACK_STATUS: 'GL_SHOP_PAYBACK_STATUS',
  EU_GROWTH_COMPARISON: 'EU_GROWTH_COMPARISON',
  FRANCHISE_REQUEST: { LIST: 'FRANCHISE_REQUEST_LIST' },
  GETIR_DRIVE: { DASHBOARD: 'GETIR_DRIVE_DASHBOARD' },
  GETIR_MARKET: {
    LIVE_MAP: 'GETIR_MARKET_LIVE_MAP',
    DASHBOARD: 'GETIR_MARKET_DASHBOARD',
    COMMERCIAL_MONITORING: 'GETIR_MARKET_COMMERCIAL_MONITORING',
    GROWTH_COMPARISON: 'GETIR_MARKET_GROWTH_COMPARISON',
  },
  GROWTH: {
    DAILY_DASHBOARD: 'GROWTH_DASHBOARD',
    ORDER_GROWTH_MONITORING: 'ORDER_GROWTH_MONITORING',
  },
  DAILY_SUMMARY: {
    COUNTRY: 'DAILY_SUMMARY_COUNTRY',
    GLOBAL: 'DAILY_SUMMARY_GLOBAL',
    FOUNDERS_CUSTOM: 'DAILY_SUMMARY_FOUNDERS_CUSTOM',
  },
  LOTTERY: {
    NEW: 'LOTTERY_NEW',
    DETAIL: 'LOTTERY_DETAIL',
  },
  GIVEAWAY_EVENT: { LIST: 'GIVEAWAY_EVENT_DRAW_LIST' },
  PUSH_NOTIFICATION: {
    LIST: 'PUSH_NOTIFICATION_LIST',
    NEW: 'PUSH_NOTIFICATION_NEW',
    DETAIL: 'PUSH_NOTIFICATION_DETAIL',
  },
  POPUP: {
    LIST: 'POPUP_LIST',
    NEW: 'POPUP_NEW',
    DETAIL: 'POPUP_DETAIL',
  },
  EMAIL: {
    LIST: 'EMAIL_LIST',
    NEW: 'EMAIL_NEW',
    DETAIL: 'EMAIL_DETAIL',
  },
  SMS: {
    LIST: 'SMS_LIST',
    NEW: 'SMS_NEW',
    DETAIL: 'SMS_DETAIL',
  },
  TRANSACTIONAL_NOTIFICATION: {
    LIST: 'TRANSACTIONAL_NOTIFICATION_LIST',
    NEW: 'TRANSACTIONAL_NOTIFICATION_NEW',
    DETAIL: 'TRANSACTIONAL_NOTIFICATION_DETAIL',
  },
  TRANSACTIONAL_SMS: {
    LIST: 'TRANSACTIONAL_SMS_LIST',
    NEW: 'TRANSACTIONAL_SMS_NEW',
    DETAIL: 'TRANSACTIONAL_SMS_DETAIL',
  },
  COMMUNICATION_SERVICE_CREDENTIALS: {
    LIST: 'COMMUNICATION_SERVICE_CREDENTIALS_LIST',
    NEW: 'COMMUNICATION_SERVICE_CREDENTIALS_NEW',
    DETAIL: 'COMMUNICATION_SERVICE_CREDENTIALS_DETAIL',
  },
  COMMUNICATION_CALLBACK_URLS: {
    LIST: 'COMMUNICATION_CALLBACK_URLS_LIST',
    NEW: 'COMMUNICATION_CALLBACK_URLS_NEW',
    DETAIL: 'COMMUNICATION_CALLBACK_URLS_DETAIL',
  },
  COMMUNICATION_BULK_SMS: {
    LIST: 'COMMUNICATION_BULK_SMS_LIST',
    NEW: 'COMMUNICATION_BULK_SMS_NEW',
    DETAIL: 'COMMUNICATION_BULK_SMS_DETAIL',
  },
  COMMUNICATION_HISTORY: 'COMMUNICATION_HISTORY',
  TECHNOLOGY: {
    COMPLIANCE_REPORT: {
      HOME: 'TECHNOLOGY_COMPLIANCE_REPORT_HOME',
      NODE: {
        VERSIONS: 'TECHNOLOGY_COMPLIANCE_REPORT_NODE_VERSIONS',
        VULNERABILITIES: 'TECHNOLOGY_COMPLIANCE_REPORT_NODE_VULNERABILITIES',
        VULNERABILITY_DETAIL: 'TECHNOLOGY_COMPLIANCE_REPORT_NODE_VULNERABILITY_DETAIL',
      },
    },
  },
  ANNOUNCEMENT: {
    LIST: 'ANNOUNCEMENT_LIST',
    NEW: 'ANNOUNCEMENT_NEW',
    DETAIL: 'ANNOUNCEMENT_DETAIL',
  },
  CODE_BULK: 'CODE_BULK',
  BANNER: {
    LIST: 'BANNER_LIST',
    NEW: 'BANNER_NEW',
    DETAIL: 'BANNER_DETAIL',
    ACTION: 'BANNER_ACTION',
  },
  NOTIFICATION_CENTER: {
    LIST: 'NOTIFICATION_CENTER_LIST',
    NEW: 'NOTIFICATION_CENTER_NEW',
    DETAIL: 'NOTIFICATION_CENTER_DETAIL',
  },
  WAREHOUSE_SEGMENT: {
    DETAIL: 'WAREHOUSE_SEGMENT_DETAIL',
    NEW: 'WAREHOUSE_SEGMENT_NEW',
    UPLOAD: 'WAREHOUSE_SEGMENT_MATCHING_UPLOAD',
    LIST: 'WAREHOUSE_SEGMENT_LIST',
  },
  GETIR_WATER: {
    COURIER_STATUS: 'GW_COURIER_STATUS',
    ACTIVE_ORDER: 'GW_ACTIVE_ORDER',
    ORDER_DETAIL: 'GW_ORDER_DETAIL',
    ORDER_FILTER: 'GW_ORDER_FILTER',
    VENDOR_FILTER: 'GW_VENDOR_FILTER',
    CAMPAIGNS: 'GW_CAMPAIGNS',
    ANNOUNCEMENTS: 'GW_ANNOUNCEMENTS',
    SLOT_CONFIG: 'GW_SLOT_CONFIG',
  },
  DELIVERY_FEE: { BULK_UPLOAD: 'DELIVERY_FEE_BULK_UPLOAD' },
  SERVICE_FEE: { BULK_UPLOAD: 'DELIVERY_FEE_BULK_UPLOAD' },
  DYS_CONFIGS: { UPDATE: 'DYS_CONFIGS_UPDATE' },
  HIGH_LEVEL_DYS: 'HIGH_LEVEL_DYS',
  RECONCILIATION_DAILY_REPORT: { LIST: 'RECONCILIATION_DAILY_REPORT_LIST' },
  BANK_RECONCILIATION_REPORT: { LIST: 'BANK_RECONCILIATION_REPORT' },
  BANK_RECONCILIATION_SUMMARY: 'BANK_RECONCILIATION_SUMMARY',
  CLIENT: {
    LIST: 'CLIENT_LIST',
    DETAIL: 'CLIENT_DETAIL',
    ATTACHMENTS_DETAIL: 'CLIENT_ATTACHMENTS_DETAIL',
  },
  TIP_PAYBACK: {
    SUMMARY_LIST: 'TIP_PAYBACK_SUMMARY_LIST',
    SUMMARY_DETAILS: 'TIP_PAYBACK_SUMMARY_DETAILS',
    SUMMARY_FAIL_REASONS: 'TIP_PAYBACK_SUMMARY_FAIL_REASONS',
  },
  PRODUCTS_LIST: 'PRODUCTS_LIST',
  GETIR_MARKET_ORDER_RATINGS: { RATING_TAGS: 'RATING_TAGS' },
  FRANCHISE_EQUIPMENT: {
    DETAIL: 'FRANCHISE_EQUIPMENT_DETAIL',
    LIST: 'FRANCHISE_EQUIPMENT_LIST',
    NEW: 'FRANCHISE_EQUIPMENT_NEW',
  },
  COURIER_PLAN: {
    LIST: 'COURIER_PLAN_LIST',
    PROCEED: 'COURIER_PLAN_PROCEED',
    NEW: 'COURIER_PLAN_NEW',
  },
  COURIER_COMMUNICATION_NOTIFICATION: {
    LIST: 'COURIER_COMMUNICATION_NOTIFICATION_LIST',
    CREATE: 'COURIER_COMMUNICATION_NOTIFICATION_CREATE',
    DETAIL: 'COURIER_COMMUNICATION_NOTIFICATION_DETAIL',
  },
  COURIER_COMMUNICATION_SEGMENT: {
    LIST: 'COURIER_COMMUNICATION_SEGMENT_LIST',
    CREATE: 'COURIER_COMMUNICATION_SEGMENT_CREATE',
  },
  VEHICLE_CONSTRAINT: {
    DETAIL: 'VEHICLE_CONSTRAINT_DETAIL',
    LIST: 'VEHICLE_CONSTRAINT_LIST',
    NEW: 'VEHICLE_CONSTRAINT_NEW',
  },
  VEHICLE: {
    LIST: 'VEHICLE_LIST',
    NEW: 'VEHICLE_NEW',
    DETAIL: 'VEHICLE_DETAIL',
  },
  TMS_DRIVER: {
    LIST: 'TMS_DRIVER_LIST',
    DETAIL: 'TMS_DRIVER_DETAIL',
  },
  TMS: {
    LIST: 'TMS_LIST',
    NEW: 'TMS_NEW',
    DETAIL: 'TMS_DETAIL',
  },
  RETURNS: 'RETURNS',
  AB_TEST_PAGE: {
    LIST: 'AB_TEST_LIST',
    NEW: 'AB_TEST_NEW',
    DETAIL: 'AB_TEST_DETAIL',
  },
  PAYMENTS: { LIST: 'PAYMENTS_LIST', DETAIL: 'PAYMENTS_DETAIL' },
  MERCHANTS: {
    LIST: 'MERCHANTS_LIST',
    DETAIL: 'MERCHANTS_DETAIL',
    NEW: 'MERCHANTS_NEW',
  },
  INSTALLMENT_COMMISSIONS: 'INSTALLMENT_COMMISSIONS',
  CUSTOMER_AGREEMENT: 'CUSTOMER_AGREEMENT',
  STOCK: {
    ORDER: {
      AUTO: 'STOCK_ORDER_AUTO',
      VOLUME_AUTO: 'STOCK_ORDER_VOLUME_AUTO',
    },
    TRANSFER: { AUTO: 'STOCK_TRANSFER_AUTO' },
    TOBB: 'TOBB_GIB_REQUEST',
  },
  ON_OFF_PROMO_CONFIG: 'ON_OFF_PROMO_CONFIG',
  PRICING_TOOL: 'PRICING_TOOL',
  MARKET_GROWTH_OPERATIONS_TOOL_SETTINGS:
    'MARKET_GROWTH_OPERATIONS_TOOL_SETTINGS',
  MARKET_INTELLIGENCE_PRICE_INDEX: 'MARKET_INTELLIGENCE_PRICE_INDEX',
  MARKET_INTELLIGENCE_PRODUCTS: 'MARKET_INTELLIGENCE_PRODUCTS',
  MARKET_INTELLIGENCE_PRICE_RECOMMENDATION: 'MARKET_INTELLIGENCE_PRICE_RECOMMENDATION',
  AB_TEST_V2_PAGE: {
    LIST: 'AB_TEST_V2_LIST',
    NEW: 'AB_TEST_V2_NEW',
    DETAIL: 'AB_TEST_V2_DETAIL',
  },
  MARKET_PRODUCT_CHAIN_MANAGEMENT: {
    ROOT: 'MARKET_PRODUCT_CHAIN_MANAGEMENT_ROOT',
    WAREHOUSES_LIST: 'MARKET_PRODUCT_CHAIN_MANAGEMENT_WAREHOUSES_LIST',
    WAREHOUSES_DETAIL: 'MARKET_PRODUCT_CHAIN_MANAGEMENT_WAREHOUSES_DETAIL',
    PRODUCTS_LIST: 'MARKET_PRODUCT_CHAIN_MANAGEMENT_PRODUCTS_LIST',
    PRODUCTS_DETAIL: 'MARKET_PRODUCT_CHAIN_MANAGEMENT_PRODUCTS_DETAIL',
    CONFIGURATION: 'MARKET_PRODUCT_CHAIN_MANAGEMENT_CONFIGURATION',
    DARK_STORE_DETAIL: 'MARKET_PRODUCT_CHAIN_MANAGEMENT_WAREHOUSES_DARK_STORE_DETAIL',
    MATCH_SUPPLIERS: 'MARKET_PRODUCT_CHAIN_MANAGEMENT_MATCH_SUPPLIERS',
    MATCH_CW_DS: 'MARKET_PRODUCT_CHAIN_MANAGEMENT_MATCH_CW_DS',
  },
  COMMERCE_INTELLIGENCE: {
    ROOT: 'COMMERCE_INTELLIGENCE_ROOT',
    PRODUCT_MATCHING: 'COMMERCE_INTELLIGENCE_PRODUCT_MATCHING',
    SMART_PRICING_INDEX: 'COMMERCE_INTELLIGENCE_SMART_PRICING_INDEX',
  },
  TRANSACTIONS: { LIST: 'TRANSACTIONS_LIST', DETAIL: 'TRANSACTIONS_DETAIL' },
  PAYMENT_EVENT: { DETAIL: 'TRANSACTION_EVENT_DETAIL', DETAIL_CARD: 'TRANSACTION_EVENT_DETAIL_CARD' },
  DISCOUNT_CODE: {
    SEGMENTED_CODE_GENERATOR: 'SEGMENTED_CODE_GENERATOR',
    LIST: 'LIST',
  },
  ALGORITHM: {
    CONFIG: {
      LIST: 'ALGORITHM_CONFIG_LIST',
      DETAIL: 'ALGORITHM_CONFIG_DETAIL',
      DOMAIN: {
        BASE: {
          DETAIL: 'ALGORITHM_DOMAIN_CONFIG_DETAIL',
          LIST: 'ALGORITHM_DOMAIN_CONFIG_LIST',
        },
      },
    },
  },
  PROFILE: 'PROFILE',
  MARKETING: {
    CLIENT_APP_ACTION: 'MARKETING_CLIENT_APP_ACTION',
    OPTIONAL_CONTROL: {
      CONTROL_WRAPPER: 'MARKETING_OPTIONAL_CONTROL_CONTROL_WRAPPER',
      LOCALS_STORE_CONTROL: 'MARKETING_OPTIONAL_CONTROL_LOCALS_STORE_CONTROL',
    },
    CONNECTED_CONTENT_MODAL: 'MARKETING_CONNECTED_CONTENT_MODAL',
    SELECT: {
      ANNOUNCEMENT: 'MARKETING_SELECT_ANNOUNCEMENT',
      PRODUCT_CATEGORY: 'MARKETING_SELECT_PRODUCT_CATEGORY',
      PRODUCT_SUB_CATEGORY: 'MARKETING_SELECT_PRODUCT_SUB_CATEGORY',
      IN_APP_REDIRECTION: 'MARKETING_SELECT_IN_APP_REDIRECTION',
      LOCALS_CHAIN: 'MARKETING_SELECT_LOCALS_CHAIN',
      ARTISAN_CUISINE_TYPE: 'MARKETING_SELECT_ARTISAN_CUISINE_TYPE',
      LOCAL_SHOP: 'MARKETING_SELECT_LOCAL_SHOP',
      MARKET_PRODUCT: 'MARKETING_SELECT_MARKET_PRODUCT',
      PROMO: 'MARKETING_SELECT_PROMO',
      RESTAURANT: 'MARKETING_SELECT_RESTAURANT',
      NOTIFICATION_CATEGORY: 'MARKETING_SELECT_NOTIFICATION_CATEGORY',
      CHAIN_RESTAURANT: 'MARKETING_SELECT_CHAIN_RESTAURANT',
      FOOD_CHAIN: 'FOOD_CHAIN',
      CLIENT_DRAFT: 'MARKETING_SELECT_CLIENT_DRAFT',
      TARGET_DOMAIN: 'MARKETING_TARGET_DOMAIN',
      CITY: 'MARKETING_SELECT_CITY',
      NOTIF_SOUND_TYPE: 'MARKETING_SELECT_NOTIF_SOUND_TYPE',
      WAREHOUSE: 'MARKETING_SELECT_WAREHOUSE',
      ARTISAN_VERTICAL: 'MARKETING_SELECT_ARTISAN_VERTICAL',
      JOB_TYPE: 'MARKETING_SELECT_JOB_TYPE',
      POST_DETAIL: 'MARKETING_SELECT_POST_DETAIL',
      NOTIFICATION_TAG: 'MARKETING_SELECT_NOTIFICATION_TAG',
      FOOD_DEEP_LINK: 'MARKETING_SELECT_FOOD_DEEP_LINK',
    },
  },
  ORDER_COUNTER: 'ORDER_COUNTER',
  AUTO_SEGMENT: { LIST: 'AUTO_SEGMENT_LIST' },
  FINANCE: { ORDER: 'GETIR_FINANCE_ORDER_DETAIL', FILTER: 'GETIR_FINANCE_ORDER_FILTER' },
  FRANCHISE_CONFIG_TYPE: {
    NEW: 'FRANCHISE_CONFIG_TYPE_NEW',
    LIST: 'FRANCHISE_CONFIG_TYPE_LIST',
    DETAIL: 'FRANCHISE_CONFIG_TYPE_DETAIL',
  },
  FRANCHISE_LEGAL: {
    NEW: 'FRANCHISE_LEGAL_NEW',
    LIST: 'FRANCHISE_LEGAL_LIST',
    DETAIL: 'FRANCHISE_LEGAL_DETAIL',
  },
  MARKET_FEES: { MARKET_FEES_BULK_UPLOAD: 'MARKET_FEES_BULK_UPLOAD', DETAILS: 'MARKET_FEES_DETAILS' },
  MARKET_BASKET: { LIST: 'MARKET_BASKET_LIST', DETAIL: 'MARKET_BASKET_DETAIL' },
  PAYOUTS_FOR_DOMAINS: 'PAYOUTS_FOR_DOMAINS',
  PAYOUTS_TRANSACTIONS_FOR_DOMAINS: 'PAYOUTS_TRANSACTIONS_FOR_DOMAINS',
  BUSINESS_ALERTING_TOOL: {
    ALERT_CONDITION: {
      LIST: 'BUSINESS_ALERTING_TOOL_ALERT_CONDITION_LIST',
      NEW: 'BUSINESS_ALERTING_TOOL_ALERT_CONDITION_NEW',
      DETAIL: 'BUSINESS_ALERTING_TOOL_ALERT_CONDITION_DETAIL',
    },
    METRIC_GROUP: { COMPONENTS: { SELECT: 'BUSINESS_ALERTING_TOOL_COMPONENT_SELECT_METRIC_GROUP' } },
    INCIDENT: {
      LIST: 'BUSINESS_ALERTING_TOOL_INCIDENT_LIST',
      DETAIL: 'BUSINESS_ALERTING_TOOL_INCIDENT_DETAIL',
    },
  },
  LMD_AND_OTHER_EXPENSES: { UPLOAD: 'LMD_AND_OTHER_EXPENSES_UPLOAD' },
  INTERNAL_AUTHENTICATION: {
    TEAM: {
      LIST: 'INTERNAL_AUTHENTICATION_TEAM_LIST',
      DETAIL: 'INTERNAL_AUTHENTICATION_TEAM_DETAIL',
    },
    SERVICE: {
      LIST: 'INTERNAL_AUTHENTICATION_SERVICE_LIST',
      DETAIL: 'INTERNAL_AUTHENTICATION_SERVICE_DETAIL',
    },
  },
  MARKETING_APPROVAL: { LIST: 'MARKETING_APPROVAL_LIST' },
  LLM: { AGENT_GUIDANCE_GENERATION: 'AGENT_GUIDANCE_GENERATION' },
  PAYMENT_FRAUD_CONTROL_LIST: 'PAYMENT_FRAUD_CONTROL_LIST',
  ASSET_MANAGEMENT_MODULES: {
    COMPLIANCE_RECORD: 'ASSET_MANAGEMENT_MODULES_COMPLIANCE_RECORD',
    ASSIGNED_GETIRIANS: 'ASSET_MANAGEMENT_MODULES_ASSIGNED_GETIRIANS',
    DAMAGE_RECORD: 'ASSET_MANAGEMENT_MODULES_DAMAGE_RECORD',
    TRAFFIC_PENALTY: 'ASSET_MANAGEMENT_MODULES_TRAFFIC_PENALTY',
    EQUIPMENT_INFORMATION: 'ASSET_MANAGEMENT_MODULES_EQUIPMENT_INFORMATION',
  },
};

export const SPINNER = {
  DEFAULT: 1,
  EMPTY: 2,
};

export const HTTP_STATUS_CODE = {
  ACCEPTED: 202,
  BAD_GATEWAY: 502,
  BAD_REQUEST: 400,
  CONFLICT: 409,
  CONTINUE: 100,
  CREATED: 201,
  EXPECTATION_FAILED: 417,
  FAILED_DEPENDENCY: 424,
  FORBIDDEN: 403,
  GATEWAY_TIMEOUT: 504,
  GONE: 410,
  HTTP_VERSION_NOT_SUPPORTED: 505,
  IM_A_TEAPOT: 418,
  INSUFFICIENT_SPACE_ON_RESOURCE: 419,
  INSUFFICIENT_STORAGE: 507,
  INTERNAL_SERVER_ERROR: 500,
  LENGTH_REQUIRED: 411,
  LOCKED: 423,
  METHOD_FAILURE: 420,
  METHOD_NOT_ALLOWED: 405,
  MOVED_PERMANENTLY: 301,
  MOVED_TEMPORARILY: 302,
  MULTI_STATUS: 207,
  MULTIPLE_CHOICES: 300,
  NETWORK_AUTHENTICATION_REQUIRED: 511,
  NO_CONTENT: 204,
  NON_AUTHORITATIVE_INFORMATION: 203,
  NOT_ACCEPTABLE: 406,
  NOT_FOUND: 404,
  NOT_IMPLEMENTED: 501,
  NOT_MODIFIED: 304,
  OK: 200,
  PARTIAL_CONTENT: 206,
  PAYMENT_REQUIRED: 402,
  PERMANENT_REDIRECT: 308,
  PRECONDITION_FAILED: 412,
  PRECONDITION_REQUIRED: 428,
  PROCESSING: 102,
  PROXY_AUTHENTICATION_REQUIRED: 407,
  REQUEST_HEADER_FIELDS_TOO_LARGE: 431,
  REQUEST_TIMEOUT: 408,
  REQUEST_TOO_LONG: 413,
  REQUEST_URI_TOO_LONG: 414,
  REQUESTED_RANGE_NOT_SATISFIABLE: 416,
  RESET_CONTENT: 205,
  SEE_OTHER: 303,
  SERVICE_UNAVAILABLE: 503,
  SWITCHING_PROTOCOLS: 101,
  TEMPORARY_REDIRECT: 307,
  TOO_MANY_REQUESTS: 429,
  UNAUTHORIZED: 401,
  UNPROCESSABLE_ENTITY: 422,
  UNSUPPORTED_MEDIA_TYPE: 415,
  USE_PROXY: 305,
};

export const DOMAIN_TYPES = 'GETIR_MARKET_DOMAIN_TYPES';
export const WAREHOUSE_STATUS_TYPES = 'WAREHOUSE_STATUS_TYPES';
export const COURIER_STATUSES = 'COURIER_STATUSES';
export const COURIER_ACTIVENESS = 'COURIER_ACTIVENESS';
export const CLIENT_STATUS_CANCELED = 'CLIENT_STATUS_CANCELED';
export const POS_REPORT_REFUND_STATUS_TYPES = 'POS_REPORT_REFUND_STATUS_TYPES';

export const ACTIVE = 'ACTIVE';
export const INACTIVE = 'INACTIVE';
export const CLOSED = 'CLOSED';

export const STATES = 'STATES';
export const DEFAULT = 'default';
export const DANGER = 'danger';
export const WARNING = 'warning';
export const SUCCESS = 'success';
export const INFO = 'info';
export const TRANSPARENT = 'transparent';

export const TAG_COLORS = {
  [DEFAULT]: '#5D3EBC',
  [DANGER]: '#d9534f',
  [WARNING]: '#f0ad4e',
  [SUCCESS]: '#5cb85c',
  [INFO]: '#3a87ac',
  [TRANSPARENT]: '#66000000',
};

export const GETIR_10_DOMAIN_TYPE = 1;
export const GETIR_FOOD_DOMAIN_TYPE = 2;
export const GETIR_MARKET_DOMAIN_TYPE = 3;
export const GETIR_VOYAGER_DOMAIN_TYPE = 4;
export const GETIR_MALL_DOMAIN_TYPE = 5;
export const GETIR_LOCALS_DOMAIN_TYPE = 6;
export const GETIR_BITAKSI_DOMAIN_TYPE = 7;
export const GETIR_WATER_MARKETPLACE_DOMAIN_TYPE = 8;
export const GETIR_JOB_DOMAIN_TYPE = 11;
export const GETIR_DRIVE_DOMAIN_TYPE = 9;
export const GETIR_N11_DOMAIN_TYPE = 12;
export const GETIR_N11_QUICK_DOMAIN_TYPE = 13;
export const GETIR_FINANCE_DOMAIN_TYPE = 14;
export const GETIR_SELECT_DOMAIN_TYPE = 15;
export const GETIR_GORILLAS_DOMAIN_TYPE = 17;
export const N11_DOMAIN_TYPE = 18;
export const GORILLAS_INTEGRATION_TYPE = 'gorillas';

export const DOMAIN_COLORS_BY_DOMAIN_TYPE = {
  [GETIR_10_DOMAIN_TYPE]: '#5D3EBC',
  [GETIR_FOOD_DOMAIN_TYPE]: '#FF964A',
  [GETIR_MARKET_DOMAIN_TYPE]: '#58666E',
  [GETIR_VOYAGER_DOMAIN_TYPE]: '#198232',
  [GETIR_LOCALS_DOMAIN_TYPE]: '#79151E',
  [GETIR_BITAKSI_DOMAIN_TYPE]: '#f6c843',
  [GETIR_WATER_MARKETPLACE_DOMAIN_TYPE]: '#005FEE',
  [GETIR_JOB_DOMAIN_TYPE]: undefined,
  [GETIR_DRIVE_DOMAIN_TYPE]: '#24B7E6',
  [GETIR_N11_DOMAIN_TYPE]: undefined,
  [GETIR_FINANCE_DOMAIN_TYPE]: undefined,
};

export const GETIR_DOMAIN_TYPE_CODES = [
  GETIR_10_DOMAIN_TYPE,
  GETIR_FOOD_DOMAIN_TYPE,
  GETIR_MARKET_DOMAIN_TYPE,
  GETIR_VOYAGER_DOMAIN_TYPE,
  GETIR_LOCALS_DOMAIN_TYPE,
  GETIR_FINANCE_DOMAIN_TYPE,
];

export const GETIR_MARKET_DOMAIN_TYPES = [GETIR_10_DOMAIN_TYPE, GETIR_MARKET_DOMAIN_TYPE, GETIR_VOYAGER_DOMAIN_TYPE];
export const GETIR_MAREKT_DOMAIN_TYPES_WITHOUT_VOYAGER = [GETIR_10_DOMAIN_TYPE, GETIR_MARKET_DOMAIN_TYPE];
export const GETIR_WORKING_HOURS_DOMAIN_TYPES = [
  GETIR_10_DOMAIN_TYPE,
  GETIR_MARKET_DOMAIN_TYPE,
  GETIR_VOYAGER_DOMAIN_TYPE,
  GETIR_FINANCE_DOMAIN_TYPE,
  GETIR_GORILLAS_DOMAIN_TYPE,
];

export const DOMAIN_TYPES_WITHOUT_WAREHOUSES = [
  GETIR_BITAKSI_DOMAIN_TYPE,
  GETIR_WATER_MARKETPLACE_DOMAIN_TYPE,
  GETIR_JOB_DOMAIN_TYPE,
  GETIR_DRIVE_DOMAIN_TYPE,
  GETIR_N11_DOMAIN_TYPE,
  N11_DOMAIN_TYPE,
];
export const ALL_DOMAIN_TYPES = [...GETIR_DOMAIN_TYPE_CODES, ...DOMAIN_TYPES_WITHOUT_WAREHOUSES];

export const WAREHOUSE_ARCHIVE_STATE = 100;
export const WAREHOUSE_INACTIVE_STATE = 200;
export const WAREHOUSE_ACTIVE_STATE = 300;

export const WAREHOUSE_STATES = [WAREHOUSE_ARCHIVE_STATE, WAREHOUSE_INACTIVE_STATE, WAREHOUSE_ACTIVE_STATE];

export const WAREHOUSE_BUSY_STATUS = 100;
export const WAREHOUSE_OUT_OF_COURIER_STATUS = 200;
export const WAREHOUSE_FREE_STATUS = 300;

export const WAREHOUSE_STATUS = [WAREHOUSE_BUSY_STATUS, WAREHOUSE_OUT_OF_COURIER_STATUS, WAREHOUSE_FREE_STATUS];

export const ACTIVE_TRANSFER_GROUP_STATUS = 100;
export const INACTIVE_TRANSFER_GROUP_STATUS = 200;

export const TRANSFER_GROUP_STATUSES = [ACTIVE_TRANSFER_GROUP_STATUS, INACTIVE_TRANSFER_GROUP_STATUS];

export const NOTE_TYPES = {
  ARTISAN_ORDER: 'ArtisanOrder',
  CLIENT: 'Client',
};

export const FOOD_NOTE_TYPE = 'FoodOrder';
export const FOOD_FILTER_ORDERS_DEFAULT_SELECT_MS = 100;

export const MAIN_WAREHOUSE_TYPE = 1;
export const REGULAR_WAREHOUSE_TYPE = 2;
export const VIRTUAL_WAREHOUSE_TYPE = 3;
export const SC_GROCER_WAREHOUSE_TYPE = 4;
export const FACTORY_WAREHOUSE_TYPE = 5;
export const SUPPLY_CHAIN_OPERATIONS_WAREHOUSE_TYPE = 6;
export const VEHICLE_PARK_WAREHOUSE_TYPE = 7;
export const STORE_CONVERSION_WAREHOUSE_TYPE = 8;
export const NONAGREEMENT_WAREHOUSE_TYPE = 9;
export const OTHER_WAREHOUSE_TYPE = 10;
export const HUB_WAREHOUSE_TYPE = 11;

export const STORE_CONVERSION_SHORT_LABEL_TEXT = 'SC';

export const WAREHOUSE_TYPES = [
  MAIN_WAREHOUSE_TYPE,
  REGULAR_WAREHOUSE_TYPE,
  VIRTUAL_WAREHOUSE_TYPE,
  SC_GROCER_WAREHOUSE_TYPE,
  FACTORY_WAREHOUSE_TYPE,
  SUPPLY_CHAIN_OPERATIONS_WAREHOUSE_TYPE,
  VEHICLE_PARK_WAREHOUSE_TYPE,
  STORE_CONVERSION_WAREHOUSE_TYPE,
  NONAGREEMENT_WAREHOUSE_TYPE,
  OTHER_WAREHOUSE_TYPE,
  HUB_WAREHOUSE_TYPE,
];

// export const PLATFORM_WEB = "Web";
// export const PLATFORM_MOBILE = "Mobile";
export const PLATFORM_TYPE = {
  WEB: 'Web',
  MOBILE: 'Mobile',
};

export const PLATFORM_TYPES = [PLATFORM_TYPE.WEB, PLATFORM_TYPE.MOBILE];

export const LOCALS_DELIVERY = {
  GETIR: 1,
  STORE: 2,
  IN_SHORT: {
    GG: 1,
    IG: 2,
  },
};

export const LOCALS_DELIVERY_TYPES = [LOCALS_DELIVERY.GETIR, LOCALS_DELIVERY.STORE];

export const COURIER_TRACKABILITY_TYPE = {
  TRACKABLE: 'TRACKABLE',
  UNTRACKABLE: 'UNTRACKABLE',
};

export const COURIER_TRACKABILITY_TYPES = [COURIER_TRACKABILITY_TYPE.TRACKABLE, COURIER_TRACKABILITY_TYPE.UNTRACKABLE];

export const FOOD_TIME_TYPE = {
  INSTANT: 'instant',
  SCHEDULED: 'scheduled',
};

export const FOOD_DELIVERY = {
  GETIR: 1,
  RESTAURANT: 2,
  IN_SHORT: {
    GG: 1,
    RG: 2,
  },
};

export const FOOD_PROMO_DISCOUNT_REASON = {
  DEFAULT: 0,
  SUBS: 1,
};

export const FOOD_PROMO_STATUS = { ACTIVE: 2 };

export const FOOD_DELIVERY_FEE_DISCOUNT_REASON = { SUBS: 15 };

export const FOOD_DELIVERY_TYPES = [FOOD_DELIVERY.GETIR, FOOD_DELIVERY.RESTAURANT];

// TODO: change restaurants when ready
export const LOCALS_ORDER_STATUS = {
  INCOMPLETE: 100,
  ABORTED: 200,
  BROWSING: 300,
  SCHEDULED_VERIFYING: 325,
  SCHEDULED: 350,
  VERIFYING: 400,
  PREPARING: 500,
  PREPARED: 550,
  HANDOVER_TO_RUNNER: 560,
  ON_RUNNER: 570,
  HANDOVER: 600,
  ONWAY: 700,
  REACHED: 800,
  DELIVERED: 900,
  RATED: 1000,
  CANCELED_ADMIN: 1500,
  CANCELED_RESTAURANT: 1600,
};

export const LOCALS_RETURN_STATUS = {
  REQUEST_INITIALIZED: 100,
  DELIVERY_TYPE_SELECTED: 150,
  REQUESTED: 200,
  COURIER_ON_WAY: 300,
  COURIER_REACHED_TO_CUSTOMER: 350,
  COURIER_RECEIVES_RETURN: 400,
  COURIER_REACHED_TO_SHOP: 600,
  COURIER_DELIVERS_TO_RUNNER: 700,
  RUNNER_RECEIVES_RETURN: 710,
  COURIER_OR_RUNNER_DELIVER_TO_SHOP: 750,
  SHOP_RECEIVES_RETURN: 770,
  APPROVED_BY_SHOP: 800,
  APPROVED_BY_SHOP_PARTIALLY: 850,
  REJECTED_BY_SHOP: 900,
  REJECT_UNAPPROVED_BY_GETIR: 1000,
  REJECT_APPROVED_BY_GETIR: 1100,
  RETURN_CANCELLED: 1200,
  RETURN_ABORTED_BY_GETIR: 1250,
};

export const RETURN_STATUS_CODES = {
  850: 'APPROVED_BY_SHOP_PARTIALLY',
  900: 'REJECTED_BY_SHOP',
};

export const BASKET_ORDER_STATUS = {
  INCOMPLETE: 100,
  ABORTED: 200,
  BROWSING: 300,
  SCHEDULED_VERIFYING: 325,
  SCHEDULED: 350,
  COMPLETED: 400,
};

export const FOOD_ORDER_STATUS = {
  INCOMPLETE: 100,
  ABORTED: 200,
  BROWSING: 300,
  SCHEDULED_VERIFYING: 325,
  SCHEDULED: 350,
  VERIFYING: 400,
  PREPARING: 500,
  PREPARED: 550,
  HANDOVER: 600,
  ONWAY: 700,
  REACHED: 800,
  DELIVERED: 900,
  RATED: 1000,
  CANCELED_ADMIN: 1500,
  CANCELED_RESTAURANT: 1600,
};

export const ORDER_STATUS_COLOR_MAP = {
  success: 'green',
  active: 'orange',
  cancelled: 'red',
  incomplete: 'magenta',
};

export const FINANCE_VENDOR_MAP = {
  1: 'GETIR',
  2: 'AGT',
};

export const WORKING_JOB_STATUS = 100;
export const ON_LEAVE_JOB_STATUS = 200;
export const NOT_WORKING_JOB_STATUS = 300;

export const JOB_STATUSES_KEY = 'JOB_STATUSES';

export const JOB_STATUSES = [
  WORKING_JOB_STATUS,
  ON_LEAVE_JOB_STATUS,
  NOT_WORKING_JOB_STATUS,
];

export const GETIR_SLACK_TEAM = 'T03G7KZ5T';

export const FULL_TIME_WORK_TYPE = 1;
export const PART_TIME_WORK_TYPE = 2;
export const CONTRACTOR_WORK_TYPE = 3;
export const INTERN_WORK_TYPE = 4;

export const PERSON_WORK_TYPES_KEY = 'PERSON_WORK_TYPES';

export const PERSON_WORK_TYPES = [
  FULL_TIME_WORK_TYPE,
  PART_TIME_WORK_TYPE,
  CONTRACTOR_WORK_TYPE,
  INTERN_WORK_TYPE,
];

export const GETIR_MARKET_TAG_COLORS = {
  [DOMAIN_TYPES]: {
    [GETIR_10_DOMAIN_TYPE]: TAG_COLORS[DEFAULT],
    [GETIR_FOOD_DOMAIN_TYPE]: TAG_COLORS[DEFAULT],
    [GETIR_MARKET_DOMAIN_TYPE]: TAG_COLORS[DEFAULT],
    [GETIR_VOYAGER_DOMAIN_TYPE]: TAG_COLORS[DEFAULT],
  },
  [WAREHOUSE_STATUS_TYPES]: {
    100: TAG_COLORS[WARNING],
    200: TAG_COLORS[DANGER],
    300: TAG_COLORS[SUCCESS],
  },

  // TODO: add different color for each type
  [POS_REPORT_REFUND_STATUS_TYPES]: {
    PENDING: TAG_COLORS[WARNING],
    PROCESSING: TAG_COLORS[DEFAULT],
    COMPLETED: TAG_COLORS[SUCCESS],
    NOT_DECIDE: TAG_COLORS[DANGER],
    REVIEW: TAG_COLORS[DEFAULT],
    MANUAL: TAG_COLORS[DEFAULT],
    REVIEW_GETIR_DRIVE: TAG_COLORS[DEFAULT],
  },
  [STATES]: {
    100: TAG_COLORS[DANGER],
    200: TAG_COLORS[DANGER],
    300: TAG_COLORS[SUCCESS],
  },
  [COURIER_STATUSES]: {
    100: TAG_COLORS[SUCCESS],
    200: TAG_COLORS[DANGER],
    300: TAG_COLORS[DEFAULT],
    350: TAG_COLORS[DEFAULT],
    400: TAG_COLORS[DEFAULT],
    500: TAG_COLORS[DEFAULT],
    700: TAG_COLORS[DEFAULT],
    800: TAG_COLORS[DEFAULT],
    900: TAG_COLORS[WARNING],
    1000: TAG_COLORS[DANGER],
  },
  [COURIER_ACTIVENESS]: {
    [ACTIVE]: TAG_COLORS[SUCCESS],
    [INACTIVE]: TAG_COLORS[DANGER],
    [CLOSED]: TAG_COLORS[DANGER],
  },
  [JOB_STATUSES_KEY]: {
    [WORKING_JOB_STATUS]: TAG_COLORS[SUCCESS],
    [ON_LEAVE_JOB_STATUS]: TAG_COLORS[DANGER],
    [NOT_WORKING_JOB_STATUS]: TAG_COLORS[WARNING],
  },
  [PERSON_WORK_TYPES_KEY]: {
    [FULL_TIME_WORK_TYPE]: TAG_COLORS[DEFAULT],
    [PART_TIME_WORK_TYPE]: TAG_COLORS[DEFAULT],
    [CONTRACTOR_WORK_TYPE]: TAG_COLORS[DEFAULT],
    [INTERN_WORK_TYPE]: TAG_COLORS[DEFAULT],
  },
};

export const MALE_GENDER = 1;
export const FEMALE_GENDER = 2;

export const BLOOD_TYPES = ['0+', '0-', 'A-', 'A+', 'B-', 'B+', 'AB+', 'AB-'];

export const DRIVING_LICENSE_TYPES = ['A', 'C1', 'C', 'D1', 'D', 'BE', 'CE', 'C1E', 'DE', 'D1E', 'M', 'B1', 'B', 'A1', 'A2', 'F', 'G'];

export const MOTHER = 1;
export const FATHER = 2;
export const SPOUSE = 3;
export const CHILDREN = 4;
export const SIBLING = 5;
export const DISTANT_RELATIVE = 6;
export const FRIEND = 7;

export const RELATION_TYPES = [
  MOTHER,
  FATHER,
  SPOUSE,
  CHILDREN,
  SIBLING,
  DISTANT_RELATIVE,
  FRIEND,
];

export const WHITE_COLLAR_TYPE = 1;
export const BLUE_COLLAR_TYPE = 2;
export const COLLAR_TYPES = [WHITE_COLLAR_TYPE, BLUE_COLLAR_TYPE];

export const GETIR_MARKET_FRANCHISE_TYPE = 1;
export const REGULAR_MARKET_FRANCHISE_TYPE = 2;
export const STORE_CONVERSION_MARKET_FRANCHISE_TYPE = 3;

export const MARKET_FRANCHISE_TYPES = [
  GETIR_MARKET_FRANCHISE_TYPE,
  REGULAR_MARKET_FRANCHISE_TYPE,
  STORE_CONVERSION_MARKET_FRANCHISE_TYPE,
];

export const COUNTRY_IDS = {
  TR: '55999ad00000010000000000',
  UK: '55999ad00000020000000000',
  NL: '6059b3ad252472aba0790d66',
  FR: '6059b3a1252472aba0790d64',
  DE: '6059b3a7252472aba0790d65',
  ES: '60e83e3e5bde82e31d9d8735',
  IT: '60e83e3c5bde82e31d9d8733',
  PT: '60e83e3d5bde82e31d9d8734',
};

export const COUNTRY_CODES = {
  [COUNTRY_IDS.TR]: 'TR',
  [COUNTRY_IDS.UK]: 'GB',
  [COUNTRY_IDS.NL]: 'NL',
  [COUNTRY_IDS.FR]: 'FR',
  [COUNTRY_IDS.DE]: 'DE',
  [COUNTRY_IDS.ES]: 'ES',
  [COUNTRY_IDS.IT]: 'IT',
  [COUNTRY_IDS.PT]: 'PT',
};

export const NONE_POYGON_TYPE = 0;
export const SERVICE_AREA_POLYGON_TYPE = 1;
export const ITEM_DISABLED_POLYGON_TYPE = 2;
export const VAN_REGION_POLYGON_TYPE = 3;
export const VAN_POINT_POLYGON_TYPE = 4;
export const PROMO_DISABLED_POLYGON_TYPE = 5;
export const DISTRICT_POLYGON_TYPE = 6;
export const CHECKOUT_DISABLED_POLYGON_TYPE = 7;
export const SUBREGION_POLYGON_TYPE = 8;
export const EXTENDED_REGION_POLYGON_TYPE = 9;
export const NIGHT_SUBREGION_POLYGON_TYPE = 10;
export const TEST_DRIVE_POLYGON_TYPE = 11;
export const GORILLAS_ONLY_POLYGON_TYPE = 13;
export const GORILLAS_INTEGRATED_POLYGON_TYPE = 16;

export const POLYGON_TYPES = [
  NONE_POYGON_TYPE,
  SERVICE_AREA_POLYGON_TYPE,
  ITEM_DISABLED_POLYGON_TYPE,
  VAN_REGION_POLYGON_TYPE,
  VAN_POINT_POLYGON_TYPE,
  PROMO_DISABLED_POLYGON_TYPE,
  DISTRICT_POLYGON_TYPE,
  CHECKOUT_DISABLED_POLYGON_TYPE,
  SUBREGION_POLYGON_TYPE,
  EXTENDED_REGION_POLYGON_TYPE,
  NIGHT_SUBREGION_POLYGON_TYPE,
  TEST_DRIVE_POLYGON_TYPE,
];

export const NONE_GETIR_MARKET_POLYGON_TYPE = 0;
export const SUB_REGION_GETIR_MARKET_POLYGON_TYPE = 1;
export const BANNED_FOR_PRODUCT_DISPLAY_GETIR_MARKET_POLYGON_TYPE = 2;
export const BANNED_FOR_PROMO_GETIR_MARKET_POLYGON_TYPE = 5;
export const TOTALLY_BANNED_GETIR_MARKET_POLYGON_TYPE = 7;
export const EXTENDED_GETIR_MARKET_POLYGON_TYPE = 9;
export const BANNED_FOR_COURIER_GETIR_MARKET_POLYGON_TYPE = 10;
export const FORBIDDEN_COURIER_ROUTES_POLYGON_TYPE = 12;
export const BANNED_COURIERS_POLYGON_TYPE = 15;
export const DELIVERY_SLOTS_GETIR_MARKET_POLYGON_TYPE = 17;

export const GETIR_MARKET_POLYGON_TYPES = [
  NONE_GETIR_MARKET_POLYGON_TYPE,
  SUB_REGION_GETIR_MARKET_POLYGON_TYPE,
  BANNED_FOR_PRODUCT_DISPLAY_GETIR_MARKET_POLYGON_TYPE,
  BANNED_FOR_PROMO_GETIR_MARKET_POLYGON_TYPE,
  TOTALLY_BANNED_GETIR_MARKET_POLYGON_TYPE,
  EXTENDED_GETIR_MARKET_POLYGON_TYPE,
  BANNED_FOR_COURIER_GETIR_MARKET_POLYGON_TYPE,
  DELIVERY_SLOTS_GETIR_MARKET_POLYGON_TYPE,
];

export const WAREHOUSE_REQUIRED_POLYGON_TYPES = [
  SUB_REGION_GETIR_MARKET_POLYGON_TYPE,
  EXTENDED_GETIR_MARKET_POLYGON_TYPE,
  GORILLAS_INTEGRATED_POLYGON_TYPE,
];

export const GORILLAS_RELATED_POLYGON_TYPES = [
  GORILLAS_ONLY_POLYGON_TYPE,
  GORILLAS_INTEGRATED_POLYGON_TYPE,
];

export const SUNDAY = 0;
export const MONDAY = 1;
export const TUESDAY = 2;
export const WEDNESDAY = 3;
export const THURSDAY = 4;
export const FRIDAY = 5;
export const SATURDAY = 6;

export const DAY_OF_WEEKS = [
  SUNDAY,
  MONDAY,
  TUESDAY,
  WEDNESDAY,
  THURSDAY,
  FRIDAY,
  SATURDAY,
];

export const COUNTRY_BASE_WORKING_HOURS = 1;
export const CITY_BASE_WORKING_HOURS = 2;
export const REGION_BASE_WORKING_HOURS = 3;
export const WAREHOUSE_BASE_WORKING_HOURS = 4;

export const COUNTRY_BASE_PEAK_HOURS = 1;
export const CITY_BASE_PEAK_HOURS = 2;
export const REGION_BASE_PEAK_HOURS = 3;
export const WAREHOUSE_BASE_PEAK_HOURS = 4;

export const BASE_PEAK_HOURS = [
  COUNTRY_BASE_PEAK_HOURS,
  CITY_BASE_PEAK_HOURS,
  WAREHOUSE_BASE_PEAK_HOURS,
];

export const CONFIG_PEAK_HOURS = [
  COUNTRY_BASE_PEAK_HOURS,
  CITY_BASE_PEAK_HOURS,
];

export const BASE_WORKING_HOURS = [
  COUNTRY_BASE_WORKING_HOURS,
  CITY_BASE_WORKING_HOURS,
  WAREHOUSE_BASE_WORKING_HOURS,
];

export const CONFIG_WORKING_HOURS = [
  COUNTRY_BASE_WORKING_HOURS,
  CITY_BASE_WORKING_HOURS,
];

export const DAYTIME_INTERVAL_TYPE = 1100;
export const EARLY_NIGHT_INTERVAL_TYPE = 2100;
export const LATE_NIGHT_INTERVAL_TYPE = 2200;
export const EARLY_MORNING_INTERVAL_TYPE = 2300;

export const COURIER_STATUS_FREE = 100;
export const COURIER_STATUS_BUSY = 200;
export const COURIER_STATUS_BROWSING = 300;
export const COURIER_STATUS_RESERVED = 350;
export const COURIER_STATUS_RESERVED_QUEUE = 375;
export const COURIER_STATUS_VERIFYING = 400;
export const COURIER_STATUS_REACHED_TO_RESTAURANT = 450;
export const COURIER_STATUS_PREPARING = 500;
export const COURIER_STATUS_GATHERING = 600;
export const COURIER_STATUS_ONWAY = 700;
export const COURIER_STATUS_REACHED = 800;
export const COURIER_STATUS_RETURNING = 900;
export const COURIER_STATUS_CANCELED = 1000;
export const COURIER_STATUS_VERIFYING_REFILL = 4000;
export const COURIER_STATUS_ONWAY_REFILL = 4100;
export const COURIER_STATUS_REFILL = 4200;
export const COURIER_STATUS_BEFORE_PREPARING = 999995;
export const COURIER_STATUS_STEADY_RETURN = 999996;
export const COURIER_STATUS_LONG_AVAILABLE = 999997;
export const COURIER_STATUS_STEADY = 999998;
export const COURIER_STATUS_LONG_BUSY = 999999;
export const COURIER_STATUS_LONG_CANCELLED = 9999999;

export const COURIER_STATUS_TYPES = {
  FREE: 100,
  BUSY: 200,
  BROWSING: 300,
  RESERVED: 350,
  RESERVED_QUEUE: 375,
  VERIFYING: 400,
  REACHED_TO_RESTAURANT: 450,
  PREPARING: 450,
  GATHERING: 500,
  ONWAY: 600,
  REACHED: 700,
  RETURNING: 800,
  CANCELED: 1000,
  SLOT_VERIFYING: 2200,
  ON_WAY_TO_PICKUP: 2300,
  PICKUP_FROM_CLIENT: 2400,
  ON_WAY_TO_DELIVER: 2500,
  DELIVERED_TO_SHOP: 2600,
  RETURN_CANCELED: 2900,
  VERIFYING_REFILL: 4000,
  ONWAY_REFILL: 4100,
  REFILL: 4200,
};

export const COURIER_RETURN_STATUS_SLOT_VERIFY = 2200;
export const COURIER_RETURN_STATUS_ONWAY_TO_PICKUP = 2300;
export const COURIER_RETURN_STATUS_PICKUP_FROM_CLIENT = 2400;
export const COURIER_RETURN_STATUS_ONWAY_TO_DELIVER = 2500;
export const COURIER_RETURN_STATUS_DELIVER_TO_SHOP = 2600;
export const COURIER_RETURN_STATUS_SLOT_DELIVER_AND_WAIT = 2650;
export const COURIER_RETURN_STATUS_CANCELED = 2900;

export const GETIR_MARKET_SUBREGION_INTERVAL_TYPES = [
  DAYTIME_INTERVAL_TYPE,
  EARLY_NIGHT_INTERVAL_TYPE,
  LATE_NIGHT_INTERVAL_TYPE,
  EARLY_MORNING_INTERVAL_TYPE,
];

export const MARKET_PRODUCT_TYPE = {
  PIECE: 1,
  WEIGHT: 2,
  // RECIPE: 3,
  // EQUIPMENT: 4,
  // BAG: 5,
};

export const MARKET_PRODUCT_WEIGHT_SUB_TYPE = {
  PRE_PACKAGED: 1,
  FRESH_MEAT_AND_CHEESE: 2,
  FRESH_FRUIT_AND_VEGETABLES: 3,
};

export const MARKET_PRODUCT_PIECE_UNIT = { PIECE: 1 };

export const MARKET_PRODUCT_WEIGHT_UNIT = { KG: 2 };

export const MARKET_PRODUCT_STATUS = {
  INACTIVE: 0,
  ACTIVE: 1,
  ARCHIVED: 4,
};

export const MARKET_PRODUCT_CATEGORY_STATUS = {
  INACTIVE: 0,
  ACTIVE: 1,
};

export const MARKET_PRODUCT_MASTER_CATEGORY_STATUS = {
  INACTIVE: 0,
  ACTIVE: 1,
};

export const PRODUCT_DISPLAY_TYPE = {
  SQUARE: 0,
  WIDE: 1,
};

export const BUNDLE_DISPLAY_TYPE = {
  SHOW_BUNDLE_PRODUCTS: 0,
  DONT_SHOW_BUNDLE_PRODUCTS: 1,
};

export const PRODUCT_CATEGORY_TYPE = {
  NORMAL: 1,
  DISCOUNTED: 2,
  PERSONAL: 3,
  CUSTOM: 9,
};

export const PRODUCT_SUBCATEGORY_TYPE = {
  BUY_AGAIN: 4,
  RECOMMENDED: 5,
  LAST_ORDER: 6,
  FAVOURITES: 7,
  BENEFIT_BASED: 8,
};

export const PRODUCT_MASTER_CATEGORY_LEVEL = {
  MASTER_MAIN_CATEGORY: 10,
  MASTER_CATEGORY: 20,
  MASTER_CLASS: 30,
  MASTER_SUB_CLASS: 40,
};

export const PRODUCT_MASTER_CATEGORY_STATUS = {
  INACTIVE: 0,
  ACTIVE: 1,
};

export const VAT_VALUES = {
  VAT_0: 0,
  VAT_01: 1,
  VAT_02_1: 2.1,
  VAT_04: 4,
  VAT_05: 5,
  VAT_05_5: 5.5,
  VAT_06: 6,
  VAT_07: 7,
  VAT_08: 8,
  VAT_09: 9,
  VAT_10: 10,
  VAT_13: 13,
  VAT_16: 16,
  VAT_18: 18,
  VAT_19: 19,
  VAT_20: 20,
  VAT_21: 21,
  VAT_22: 22,
  VAT_23: 23,
};

export const TRANSFER_LIMIT_TYPE = {
  NONE: 0,
  CITY: 1,
  WAREHOUSE: 2,
};

export const PRODUCT_SEGMENT = {
  TEST: 1,
  LAUNCH: 2,
  REGULAR: 3,
  REGIONAL_SENSITIVE: 4,
  ONLY_PROMO: 5,
  DELIST_ON_DELETION: 6,
  DELIST: 7,
  FIXED_ASSET: 8,
  CONSUMABLE: 9,
  SEASONAL: 10,
  SUPPLY_SHORTAGE: 11,
  STAND_BY: 12,
};

export const PRODUCT_PACKAGING_TYPE = {
  UNIT: 1,
  SUB_PACK: 2,
  BOX: 3,
  PALLET: 4,
};

export const PRODUCT_STOCK_UNIT_TYPE = {
  PIECE: 1,
  KILOGRAM: 2,
};

export const STRUCK_PRICE_SUPPORTER_TYPE = {
  THIRD_PARTY: 1,
  SUPPLIER: 2,
  FREE: 3,
  GETIR_FINANCED: 4,
};
export const MARKET_PRODUCT_SUPPORT_TYPE = {
  NOT_SELECTED: 0,
  PERCENT: 1,
  AMOUNT: 2,
};
export const TRANSFER_GROUP_STATUS = {
  ACTIVE: 100,
  INACTIVE: 200,
};

export const VEHICLE_CONSTRAINT_STATUSES = {
  ACTIVE: 100,
  INACTIVE: 200,
};

export const MARKET_PRODUCT_WHOLESALE_BONUS = {
  MONTHLY_LEVEL_BONUS: 1,
  LOGISTIC_BONUS: 2,
  MARKETING_ACTIVITY_BONUS: 3,
  NON_RETURN_BONUS: 4,
  MONTHLY_FREE_PRODUCT_BONUS: 5,
  HANDLING_BONUS: 6,
  VENDOR_PANEL_USER_BONUS: 7,
  EARLY_PAYMENT_BONUS: 8,
};

export const MARKET_PRODUCT_WHOLESALE_BONUS_TYPE = {
  NOT_SELECTED: 0,
  PERCENT: 1,
  AMOUNT: 2,
};
export const SECTION_LOCATION_TYPE = 10;
export const BLOCK_LOCATION_TYPE = 20;
export const CELL_LOCATION_TYPE = 30;

export const WAREHOUSE_LOCATION_TYPE = [
  SECTION_LOCATION_TYPE,
  BLOCK_LOCATION_TYPE,
  CELL_LOCATION_TYPE,
];

export const NONE_LOCATION_OPERATION_TYPE = 10;
export const PICKING_LOCATION_OPERATION_TYPE = 20;
export const FEEDING_LOCATION_OPERATION_TYPE = 30;
export const INCOMING_LOCATION_OPERATION_TYPE = 40;
export const OUTGOING_LOCATION_OPERATION_TYPE = 50;
export const PICKING_BASKET_LOCATION_OPERATION_TYPE = 60;
export const REFUND_DISPOSAL_LOCATION_OPERATION_TYPE = 70;
export const FROZEN_LOCATION_OPERATION_TYPE = 80;
export const CONSUMPTION_LOCATION_OPERATION_TYPE = 90;

export const WAREHOUSE_LOCATION_OPERATION_TYPE = [
  NONE_LOCATION_OPERATION_TYPE,
  PICKING_LOCATION_OPERATION_TYPE,
  FEEDING_LOCATION_OPERATION_TYPE,
  INCOMING_LOCATION_OPERATION_TYPE,
  OUTGOING_LOCATION_OPERATION_TYPE,
  PICKING_BASKET_LOCATION_OPERATION_TYPE,
  REFUND_DISPOSAL_LOCATION_OPERATION_TYPE,
  FROZEN_LOCATION_OPERATION_TYPE,
  CONSUMPTION_LOCATION_OPERATION_TYPE,
];

export const WAREHOUSE_SEGMENT_TYPES = {
  DELIVERY_FEE: 100,
  PRODUCT_PRICING: 200,
};

// @TODO city location should be update
export const DEFAULT_MAP_COORDINATES = [29.0121795, 41.0053215];
export const DEFAULT_MAP_COORDINATES_REVERSED = [DEFAULT_MAP_COORDINATES[1], DEFAULT_MAP_COORDINATES[0]];
export const DEFAULT_MAP_ZOOM = 11;

// Define the format most commonly used by date time views
export const DEFAULT_TIME_FORMAT = 'DD-MM-YYYY HH:mm';
export const DEFAULT_DATE_FORMAT = 'YYYY-MM-DD';

export const TIME_FORMAT = {
  '24hours': 'HH:mm',
  '12hours': 'hh:mm A',
};

export const MIN = 'min';
export const MAX = 'max';
export const COMMISSION_RATE = 'commissionRate';
export const MARKET_FRANCHISE_COMMISSION_RATE_UPPER_BOUND = '-1';

export const DEFAULT_MARKET_FRANCHISE_COMMISSION_RATE = {
  [MIN]: null,
  [MAX]: null,
  [COMMISSION_RATE]: null,
};
// ERROR CODES
export const WAREHOUSE_HAS_NOT_WORKING_HOURS = 31012;
// TODO verify
export const WAREHOUSE_HAS_NOT_PEAK_HOURS = 31028;

export const GETIR_GROW_URL = 'https://www.feedback4e.com/Corporate/Login?clientName=getir';
export const GETIR_UP_URL = 'https://www.getirup.com/getirup/eep/login';
export const GETIR_NEXT_URL = 'https://www.careers-page.com/getir-2';
export const GETIR_HUB_URL = 'https://hub.getir.com/';
export const IT_HELP_DESK_URL = 'http://support.getir.com/';

export const GETIR_PRO = 'https://pro.getir.com/app/getirpro/about-page-tr-66bb04f528ed8d3ef7ecf7cf/branch=master';

export const GEMINI = 'https://gemini.google.com';
export const GEMU = 'https://gemu.getir.com';

export const GETIR_BUY_DEV_URL = 'https://s1-eu.ariba.com/gb/?realm=getir-1-T';
export const GETIR_BUY_PROD_URL = 'https://s1-eu.ariba.com/gb/?realm=getir-1';

export const SALESFORCE_DASHBOARD_DEV_URLS = [
  'https://getir2--sandboxdev--c.sandbox.vf.force.com',
  'https://getir2--sandboxdev.sandbox.lightning.force.com',
];
export const SALESFORCE_DASHBOARD_PROD_URLS = [
  'https://getir2.lightning.force.com',
  'https://getir2--c.vf.force.com',
];

export const DEFAULT_DEBOUNCE_MS = 500;

export const DEFAULT_RETRY_MS = 2000;
export const DEFAULT_RETRY_TIMES = 3;

export const FORM_MODE = {
  ADD: 'ADD',
  EDIT: 'EDIT',
};

export const DOMAIN_FILTER_TYPES = {
  EXACT: 'EXACT',
  INCLUDES: 'INCLUDES',
};

export const PERSONEL_REQUEST_STATUS = {
  INFORMATION_EDIT_REQUESTS: 1,
  NEW_PERSON_APPLICATIONS: 2,
};

export const LOCAL_DATE_TIME_FORMAT: { [x: string]: string } = {
  TR: 'DD/MM/YYYY HH:mm',
  EN: 'YYYY/MM/DD hh:mm A ',
};

export const PERSON_INFORMATION_CHANGE_STATUSES = {
  ACTIVE: 1,
  ACCEPTED: 2,
  REJECTED: 3,
};

export const TAX_TYPE = {
  INCLUDED: 1,
  EXCLUDED: 2,
};

export const TAX_TYPE_TEXT = {
  INCLUDED: 'tax_included',
  EXCLUDED: 'tax_excluded',
};

export const NEW_COURIER_TYPE = {
  MOTO: 2,
  ON_FOOT: 3,
  BIKE: 4,
  VAN: 5,
  CAR: 6,
  MITU: 7,
  VOYAGER: 8,
  MDU: 9,
  RDU: 10,
  TMS: 11,
};

export const COURIER_TYPE = {
  MOTO: 2,
  ON_FOOT: 3,
  BIKE: 4,
  VAN: 5,
  CAR: 6,
  MITU: 7,
  VOYAGER: 8,
  GM: 9,
  E_BIKE: 10,
  TMS_DRIVER: 11,
};

export const PICKER_TYPE = { GENERAL: 1 };

// COURIER_TYPE for data side, for courier plan page, different from vehicle type
export const COURIER_TYPE_FOR_COURIER_PLAN = {
  COURIER_TYPE_NONE: 1,
  COURIER_TYPE_MOTO: 2,
  COURIER_TYPE_ONFOOT: 3,
  COURIER_TYPE_BICYCLE: 4,
  COURIER_TYPE_VAN: 5,
  COURIER_TYPE_CAR: 6,
  COURIER_TYPE_MITU: 7,
  COURIER_TYPE_VOYAGER: 8,
  COURIER_TYPE_GETIR_MARKET: 9,
  COURIER_TYPE_E_BICYCLE: 10,
  COURIER_TYPE_E_MOTORCYCLE: 11,
};

export const COURIER_TYPES = [
  COURIER_TYPE.MOTO,
  COURIER_TYPE.ON_FOOT,
  COURIER_TYPE.BIKE,
  COURIER_TYPE.VAN,
  COURIER_TYPE.CAR,
  COURIER_TYPE.MITU,
  COURIER_TYPE.VOYAGER,
  COURIER_TYPE.GM,
];

export const COLOR_GREEN = '#00e491';
export const COLOR_BRILLIANT_BLUE = '#7849f7';
export const COLOR_PURPLE = '#290f7b';
export const COLOR_PINK = '#ffafcc';
export const COLOR_ORANGE = '#ffd6a5';

export const DELETE_COLOR = '#E92A00';

export const ARTISAN_ORDER_STATUS = {
  INCOMPLETE: 100,
  ABORTED: 200,
  BROWSING: 300,
  SCHEDULED_VERIFYING: 325,
  SCHEDULED: 350,
  VERIFYING: 400,
  PREPARING: 500,
  PREPARED: 550,
  HANDOVER_TO_RUNNER: 560,
  ON_RUNNER: 570,
  HANDOVER: 600,
  ONWAY: 700,
  REACHED: 800,
  DELIVERED: 900,
  RATED: 1000,
  CANCELED_ADMIN: 1500,
  CANCELED_RESTAURANT: 1600,
};

export const WATER_ORDER_STATUS = {
  INCOMPLETE: 100,
  ABORTED: 200,
  BROWSING: 300,
  SCHEDULED_VERIFYING: 325,
  SCHEDULED: 350,
  VERIFYING: 400,
  PREPARING: 500,
  PREPARED: 550,
  HANDOVER: 600,
  ONWAY: 700,
  REACHED: 800,
  DELIVERED: 900,
  RATED: 1000,
  CANCELED_ADMIN: 1500,
  CANCELED_RESTAURANT: 1600,
};

export const MARKET_ORDER_STATUS = {
  INCOMPLETE: 100,
  ABORTED: 200,
  BROWSING: 300,
  RESERVED: 350,
  WAITING_FOR_PICKER: 375,
  VERIFYING: 400,
  PREPARING: 500,
  PREPARED: 550,
  HANDOVER: 600,
  ONWAY: 700,
  REACHED: 800,
  DELIVERED: 900,
  RATED: 1000,
  CANCELED_COURIER: 1100,
  CANCELED_CLIENT: 1200,
  CANCELED_STAFF: 1300,
  CANCELED_SYSTEM: 1400,
  CANCELED_ADMIN: 1500,
};

export const MARKET_ACTIVE_ORDER_STATUS = {
  WAITING_FOR_PICKER: MARKET_ORDER_STATUS.WAITING_FOR_PICKER,
  VERIFYING: MARKET_ORDER_STATUS.VERIFYING,
  PREPARING: MARKET_ORDER_STATUS.PREPARING,
  PREPARED: MARKET_ORDER_STATUS.PREPARED,
  HANDOVER: MARKET_ORDER_STATUS.HANDOVER,
  ONWAY: MARKET_ORDER_STATUS.ONWAY,
  REACHED: MARKET_ORDER_STATUS.REACHED,
};

export const ARTISAN_ORDER_REFUND_TIMEOUT_LIMIT_AS_SECONDS = 365 * 24 * 60 * 60;

export const FOOD_ORDER_PAYMENT_STATUS = {
  NOT_PAID: 0,
  PENDING_PAYMENT_RESULT: 1,
  PAID: 2,
  PAYMENT_ERROR: 3,
  PENDING_REFUND: 4,
  REFUNDED: 5,
};

export const CALLER_TYPES = {
  UNKNOWN: -1,
  CLIENT: 0,
  COURIER: 1,
  STORE: 2,
  ADMIN: 3,
  SYSTEM: 4,
  TEST_DRIVE_COURIER: 5,
  RESTAURANT: 6,
  IVR: 7,
  PICKER: 8,
  AUTO_EVENT: 9,
  FRANCHISE_USER: 10,
  WAREHOUSE_USER: 11,
  MDU_AUTO_EVENT: 12,
};

export const WAREHOUSE_PROPOSAL_STATUSES = {
  APPLIED: 100,
  SUITABLE: 200,
  NOT_SUITABLE: 300,
};

export const foodOrderIvrActions = {
  webHelpStatuses: {
    0: {
      tr: 'Arama süreci başlatıldı',
      en: 'Call is initiated',
    },
    1: {
      tr: 'Port bulunamadı',
      en: 'Port not found',
    },
    2: {
      tr: 'Arama başlatıldı',
      en: 'Call started',
    },
    3: {
      tr: 'Aramaya gerek kalmadı',
      en: 'Call is not necessary anymore',
    },
  },
  callStatuses: {
    0: {
      tr: 'Arama süreci başlatıldı',
      en: 'Call is initiated',
    },
    1: {
      tr: 'Aranan numara kapalı ya da meşgul',
      en: 'Number cannot be reached or busy',
    },
    2: {
      tr: 'Restoranın siparişten haberi var',
      en: 'Order information is given',
    },
    3: {
      tr: 'Restoran kapalı',
      en: 'Restaurant is closed',
    },
  },
};

export const artisanUserRoles = {
  1: {
    en: 'Bussiness Staff',
    tr: 'İşletme Çalışanı',
  },
  2: {
    en: 'Bussiness Manager',
    tr: 'İşletme Yöneticisi',
  },
  3: {
    en: 'Chain User',
    tr: 'Zincir Kullanıcısı',
  },
  4: {
    en: 'Super User',
    tr: 'Super User',
  },
};

export const foodRestaurantUserRoles = {
  1: { en: 'Restaurant Staff', tr: 'Restoran Çalışanı' },
  2: { en: 'Restaurant Manager', tr: 'Restoran Yöneticisi' },
  3: { en: 'Chain User', tr: 'Zincir Kullanıcısı' },
  4: { en: 'Super User', tr: 'Super User' },
  5: { en: 'Chain Manager', tr: 'Zincir Yöneticisi' },
};

export const IBAN_COUNTRY_CODE_LENGTHS = {
  AD: 24,
  AE: 23,
  AT: 20,
  AZ: 28,
  BA: 20,
  BE: 16,
  BG: 22,
  BH: 22,
  BR: 29,
  CH: 21,
  CR: 21,
  CY: 28,
  CZ: 24,
  DE: 22,
  DK: 18,
  DO: 28,
  EE: 20,
  ES: 24,
  FI: 18,
  FO: 18,
  FR: 27,
  GB: 22,
  GI: 23,
  GL: 18,
  GR: 27,
  GT: 28,
  HR: 21,
  HU: 28,
  IE: 22,
  IL: 23,
  IS: 26,
  IT: 27,
  JO: 30,
  KW: 30,
  KZ: 20,
  LB: 28,
  LI: 21,
  LT: 20,
  LU: 20,
  LV: 21,
  MC: 27,
  MD: 24,
  ME: 22,
  MK: 19,
  MR: 27,
  MT: 31,
  MU: 30,
  NL: 18,
  NO: 15,
  PK: 24,
  PL: 28,
  PS: 29,
  PT: 25,
  QA: 29,
  RO: 24,
  RS: 22,
  SA: 24,
  SE: 24,
  SI: 19,
  SK: 24,
  SM: 27,
  TN: 24,
  TR: 26,
};
export const PICKER_WORKING_TYPES = {
  PICKING_FOR_ORDER: 100,
  INVENTORY_CHECK: 200,
  TRANSFER: 300,
  REMOVE_FROM_SALE: 500,
  SUPPLY_INBOUND_DELIVERY: 600,
  CORPORATE_SALES_OBD: 700,
  GSTORE_INVENTORY_CHECK: 800,
  TRANSFER_INBOUND_DELIVERY: 900,
  TRANSFER_OUTBOUND_DELIVERY: 1000,
};
export const PICKER_STATUSES = {
  FREE: 100,
  BUSY: 200,
  WORKING: 300,
  CANCELED: 1000,
};
export const PAYMENT_METHOD = {
  MASTER_PASS: 1,
  BKM: 2,
  ON_DELIVERY_CREDIT_CARD: 3,
  CASH: 4,
  MULTINET_CARD: 5,
  SODEXO_CARD: 6,
  SODEXO_VOUCHER: 7,
  TICKET_CARD: 8,
  TICKET_VOUCHER: 9,
  SETCARD_CARD: 10,
  METROPOL_CARD: 11,
  PAYE_CARD: 12,
  ISTANBUL_CARD: 13,
  ADYEN: 14,
  GETIR_BNPL: 26,
};

export const PAYMENT_INFO_PAYMENT_METHOD_TYPES = {
  PAYPAL: 'paypal',
  IDEAL: 'ideal',
  SCHEME: 'scheme',
  APPLE_PAY: 'applepay',
  SOFORT: 'directEbanking',
  AMERICAN_EXPRESS: 'americanExpress',
  CASH: 'cash',
  CREDIT: 'credit',
  METROPOL: 'metropol',
  MULTINET: 'multinet',
  SODEXO: 'sodexo',
  TICKET: 'ticket',
  TROY: 'troy',
  MOBILE_EXPRESS: 'mobilExpress',
  BKM: 'bkm',
  ISTANBUL_CARD: 'istanbulCard',
  LOYALTY_POINTS: 'loyalty_points',
  MEAL_CARD: 'mealCard',
  GOOGLE_PAY: 'googlepay',
  PREPAID: 'prepaid',
  GETIR_BNPL: 'getirbnpl',
};

export const ADDRESS_TYPE = {
  HOME: 1,
  OFFICE: 2,
  OTHER: 3,
};

export const PROMO_OBJECTIVE_TYPE = {
  ACQUISITION: 1,
  HABIT_BUILDING: 2,
  UPSELL_FREQUENCY: 3,
  UPSELL_BASKET: 4,
  ACTIVATION_WATCH_OUT: 5,
  ACTIVATION_RE_ACTIVATE_CHURN: 6,
  ACTIVATION_RE_ACTIVATE_COHORT: 7,
  BURN_BAYI_MUTLULUK: 8,
  DISCOUNT_CODE: 9,
  WASTE: 10,
  RAF_SENDER: 11,
  GETIR_SELECT: 15,
};

export const PROMO_FINANCED_BY = {
  SUPPLIER: 1,
  THIRD_PARTY: 2,
  GETIR: 3,
};

export const GETIR_MARKET_QUEUE_STATUS = {
  NOT_INVOLVED: 100,
  QUESTION_ASKED: 200,
  ENQUEUED: 300,
  DEQUEUED: 400,
};

export const PERSON_CANDIDATE_FORM_STATUSES = {
  WAITING_CANDIDATE_APPROVAL: 1,
  ON_CUSTOMER_SERVICE: 2,
  ON_LAW: 3,
  REJECTED: 4,
  MISSING_INFORMATION: 5,
  APPROVED: 6,
  PROCESS_CANCELLATION: 7,
  CANDIDATE_CANCELED_THE_PROCESS: 8,
  MANUAL_OPERATION: 9,
};

export const PERSON_CANDIDATE_ACTION_HISTORY_TYPES = {
  STATUS_CHANGE: 1,
  ASSIGNEE_CHANGE: 2,
};

export const SOCKET_EVENTS = {
  JOIN_LIVE_MAP_ROOM: 'join-live-map-room',
  LEAVE_LIVE_MAP_ROOM: 'leave-live-map-room',
  MARKET_CHECKOUT_NEW: 'market-checkout:new',
  ARTISAN_ORDER_CHECKOUT_FAILED_EVENT: 'artisan-order-checkout-failed',
  CONNECT: 'connect',
};

export const GOOGLE_AUTH_REQUEST_TYPES = {
  SIGN_IN: 1,
  SIGN_OUT: 2,
};

export const GETIR_MARKET_CHECKOUT_ERROR_CODE = {
  OTHER: -2,
  UNKNOWN_ERROR: -1,
  INCONSISTENT_AMOUNT_ERROR: 1340,
  MINIMUM_AMOUNT_ERROR: 1345,
  MAXIMUM_AMOUNT_ERROR: 1350,
  UNAVAILABLE_PRODUCTS_ERROR: 1360,
  INSUFFICIENT_STOCK_ERROR: 1365,
  COURIER_UNAVAILABLE_ERROR: 1370,
  COURIER_UNAVAILABLE_SLOTTED_ERROR: 8005,
  PAYMENT_FAILED: 1395,
};

export const LOCALS_CHECKOUT_ERROR_CODES = {
  SHOP_CLOSED: 9,
  NO_COURIER_AVAILABLE: 22,
};

export const CLIENT_ADDRESS_TYPES = {
  HOME: 1,
  WORK: 2,
  OTHER: 3,
};

export const WORK_TYPE_FULL_TIME = 1;
export const WORK_TYPE_PART_TIME = 2;
export const WORK_TYPE_FRANCHISE = 3;

export const VEHICLE_TYPE = {
  ON_FOOT: 100,
  MOTO: 200,
  MOTO_50CC: 250,
  MITU: 300,
  VAN: 400,
  E_BICYCLE: 500,
  E_MOTORCYCLE: 600,
  E_CAR: 700,
};

export const VEHICLE_STATUSES = {
  AVAILABLE: 1000,
  IN_USE: 2000,
  IN_TRANSFER: 2100,
  IN_SERVICE: 2200,
  INACTIVE: 3000,
};

export const TAGS_MARKET_VEHICLE = {
  DINCER_40: 'Dincer40',
  DINCER_100: 'Dincer100',
  DINCER_MOTOR: 'DincerMotosiklet',
  PERSONAL: 'Personal',
  REGULAR_MOTOR: 'RegularMotor',
  REGULAR_CAR: 'RegularCar',
  YKB_LEASING: 'YkbLeasing',
  DINCER_200: 'Dincer200',
  PEDESTRIAN: 'Pedestrian',
  ESNAF: 'Esnaf',
  ACTIVA: 'Activa',
  DIO: 'Dio',
  NOT_SUPPORTED: 'NotSupported',
};

export const DDS_OBJECTION_STATUSES = {
  NOT_OBJECTED: 100,
  WAITING: 200,
  ACCEPTED: 300,
  DENIED: 400,
};

export const ARTISAN_ORDER_STATUSES = {
  WAITING_FOR_APPROVAL: 400,
  PREPARING: 500,
  PREPARED: 550,
  WAITING_FOR_COURIER_APPROVAL: 600,
  ONWAY: 700,
  REACHED: 800,
  IN_QUEUE: 912345,
};

export const ARTISAN_COURIER_RETURN_STATUSES = {
  SLOT_VERIFYING: 2200,
  ON_WAY_TO_PICKUP: 2300,
  PICKUP_FROM_CLIENT: 2400,
  ON_WAY_TO_DELIVER: 2500,
  DELIVERED_TO_SHOP: 2600,
  DELIVERED_AND_WAITING: 2650,
};

export const DEVICE_TYPES = {
  WEB: 'Web',
  ANDROID: 'Android',
  IPHONE: 'iPhone',
  JET: 'jet',
};
export const APP_DEVICES = [DEVICE_TYPES.ANDROID, DEVICE_TYPES.IPHONE];

export const INTEGRATION_TYPES = {
  GETIR: 'GETIR',
  JET: 'JET',
  // N11Quick
  N11: 'N11',
  GORILLAS: 'GORILLAS',
  GRUBHUB: 'GRUBHUB',
  UBER: 'UBER',
};

export const unitMultipliers = {
  inchToCm: {
    name: 'Inches to Centimetres',
    from: 'inch',
    to: 'cm',
    multiplier: 2.54,
  },
  ozToGr: {
    name: 'Ounce to Gram',
    from: 'oz',
    to: 'gr',
    multiplier: 28.3495,
  },
  cubicInchToCubicCm: {
    name: 'Cubic Inches to Cubic Centimetres',
    from: 'inch³',
    to: 'cm³',
    multiplier: 16.387064,
  },
};

export const GETIR_DOMAIN_TYPES = {
  GETIR10: 1,
  FOOD: 2,
  MARKET: 3,
  VOYAGER: 4,
  LOCALS: 6,
  GORILLAS: 17,
};

export const GETIR_FOOD = {
  DELIVERY_TYPES: {
    GETIR: 1,
    RESTAURANT: 2,
  },
  RESTAURANT_DELIVERY_RESTAURANT_ID: '586659d216483a0004a52362',
  PLATFORM_TYPES: {
    WEB: 'Web',
    MOBILE: ['Android', 'iPhone'],
  },
  MEAL_CARDS: { SODEXO: 100 },
  MEAL_CARDS_STRING: { 100: 'Sodexo' },
};

export const GETIR_LOCALS = {
  DELIVERY_TYPES: {
    GETIR: 1,
    STORE: 2,
  },
  STORE_DELIVERY_STORE_ID: '586659d216483a0004a52362',
};

export const DATE_TYPE = {
  LOG_SUMMARY_DATE_TYPE_20_MINUTES: 1,
  LOG_SUMMARY_DATE_TYPE_1_HOUR: 2,
  LOG_SUMMARY_DATE_TYPE_1_DAY: 3,
  LOG_SUMMARY_DATE_TYPE_1_WEEK: 4,
  LOG_SUMMARY_DATE_TYPE_1_MONTH: 5,
};

export const DATE_TYPE_STRING = {
  [DATE_TYPE.LOG_SUMMARY_DATE_TYPE_1_HOUR]: 'hour',
  [DATE_TYPE.LOG_SUMMARY_DATE_TYPE_1_DAY]: 'day',
  [DATE_TYPE.LOG_SUMMARY_DATE_TYPE_1_WEEK]: 'week',
};

export const TECH_SQUADS = {
  INFRASTRUCTURE: {
    CORE_ENGINEERING: {
      COMMUNICATION: 'I/CE - Communication',
      CORE_SERVICES: 'I/CE - Core Services',
    },
    INTRA: {
      ADMIN_PLATFORM: 'I/I - Admin Platform',
      BUSINESS_MONITORING: 'I/I - Business Monitoring',
      EMPLOYEE_MANAGEMENT: 'I/I - Employee Management',
    },
    MAPS: { GIS_DEVELOPMENT: 'I/M - GIS Development' },
  },
  DEMAND: {
    CROSS_DOMAIN: {
      CORE_CLIENT: 'D/CD - Core Client',
      CUSTOMER: 'D/CD- Customer',
      MARKETING_COMMUNICATION: 'D/CD - Marketing Communication Squad',
      POST_ORDER: 'D/CD - Post Order',
    },
    MARKET: {
      PROMO: 'D/M - Promo',
      ORDER: 'D/M - Order',
      CONVERSION: 'D/M - Conversion',
      PRODUCT_METADATA: 'D/M - Product Metadata',
      GROWTH_RETENTION: 'D/M - Growth Retention',
      POST_ORDER: 'D/M - Post order',
    },
    WATER_MARKETPLACE: { MARKETPLACE: 'D/WM - Water Marketplace' },
    FOOD: {
      FINANCE: 'D/F - Finance',
      POST_ORDER: 'D/F - Post Order',
    },
    LOCALS: {
      SIMPLICITY: 'D/L - Simplicity',
      COMPLEXITY: 'D/L - Complexity',
      WESTEROS: 'D/L - Westeros',
      RUNNER: 'D/L - Runner',
      POST_ORDER: 'D/L - Post Order',
    },
    FINANCE: { POST_ORDER: 'D/F - Post Order' },
    // TODO: payment team names updated
    PAYMENT: { MIKLAGARD: 'D/P - Miklagard', ASGARD: 'D/P - Asgard', LOCAL: 'D/P - Local' },
    MARKETPLACE: { FINANCE: 'D/MCF - Marketplace Finance' },
  },
  SUPPLY: {
    FRANCHISE: {
      FRANCHISE_STAFF: 'S/F - Person & Franchise Staff',
      FRANCHISE_PERFORMANCE: 'S/F - Franchise Performance',
      FRANCHISE_EXPERIENCE: 'S/F - Franchise Experience',
    },
    STOCK: {
      CONSISTENCY: 'S/S - Consistency', // they don't own any page yet
      ORCHESTRATION: 'S/S - Orchestration',
      PROCUREMENT: 'S/S - Procurement',
      TRANSPORTATION: 'S/S - Transportation',
      WAREHOUSE_ORDER: 'S/S - Warehouse Order',
      MORIA: 'S/S - Moria',
    },
    COMMERCE: {
      COMMERCE: 'S/C - Commerce',
      PRICING: 'S/C - Pricing',
      PLANNING_PARTNERSHIP: 'S/C - Planning & Partnership',
    },
    COURIER: { COURIER_SERVICES: 'S/CO - Courier Services' },
  },
  ALGORITHM: { CORE: 'A/C - Core Squad' },
  DATA: { DATA_PANEL: 'D/D -DataPanel' },
};

export const FEEDBACK_TYPES = {
  CLIENT: 1,
  ORDER: 2,
  OTHER: 3,
  TEST_DRIVE: 4,
  MARKET_ORDER: 5,
};

export const KEYBOARD_CODE = {
  BACKSPACE: 'Backspace',
  TAB: 'Tab',
  ARROW_LEFT: 'ArrowLeft',
  ARROW_RIGHT: 'ArrowRight',
  ARROW_UP: 'ArrowUp',
  ARROW_DOWN: 'ArrowDown',
};

export const ALLOWED_KEYBOARD_CODES_FOR_PRICE_INPUT = {
  [KEYBOARD_CODE.BACKSPACE]: KEYBOARD_CODE.BACKSPACE,
  [KEYBOARD_CODE.TAB]: KEYBOARD_CODE.TAB,
  [KEYBOARD_CODE.ARROW_LEFT]: KEYBOARD_CODE.ARROW_LEFT,
  [KEYBOARD_CODE.ARROW_RIGHT]: KEYBOARD_CODE.ARROW_RIGHT,
  [KEYBOARD_CODE.ARROW_UP]: KEYBOARD_CODE.ARROW_UP,
  [KEYBOARD_CODE.ARROW_DOWN]: KEYBOARD_CODE.ARROW_DOWN,
};

export const FEEDBACK_STATUSES = {
  ACTIVE: 1,
  RESOLVED: 2,
};

export const FEEDBACK_SOURCE_TYPES = {
  GSM: 1,
  EMAIL: 2,
  OTHER: 3,
  WAREHOUSE: 4,
  CHAT: 5,
  SOCIAL_MEDIA: 6,
};

export const GIVEAWAY_PRODUCT_TYPES = {
  NORMAL: 1,
  GETIR_DISCOUNT: 2,
  THIRD_PARTY_DISCOUNT: 3,
};

export const APPLICATION_ENVIRONMENTS = {
  NOT_APPLICABLE: 'N/A',
  LOCAL: 'local',
  DEVELOPMENT: 'development',
  TBE: 'tbe',
  STAGING: 'staging',
  PRODUCTION: 'production',
};

export const ADMIN_PANEL_CONFIGS = {
  LIVEMAP_WATCHER: 'co:LIVEMAP_WATCHER',
  COURIER_WATCHER: 'co:COURIER_WATCHER',
  WATCHER_KEY_TEST_DRIVE: 'co:WATCHER_KEY_TEST_DRIVE',
  SUPPLY_WATCHER: 'co:SUPPLY_WATCHER',
  TRESHOLD_ORDER_STATUS_VERIFYING: 'co:TRESHOLD_ORDER_STATUS_VERIFYING',
  TRESHOLD_ORDER_STATUS_PREPARING: 'co:TRESHOLD_ORDER_STATUS_PREPARING',
  TRESHOLD_ORDER_STATUS_PREPARED: 'co:TRESHOLD_ORDER_STATUS_PREPARED',
  TRESHOLD_ORDER_STATUS_HANDOVER: 'co:TRESHOLD_ORDER_STATUS_HANDOVER',
  TRESHOLD_ORDER_STATUS_ONWAY: 'co:TRESHOLD_ORDER_STATUS_ONWAY',
  TRESHOLD_ORDER_STATUS_REACHED: 'co:TRESHOLD_ORDER_STATUS_REACHED',
  INFORMATION_PORTAL_NEW_PROMOS_DAYS_COUNT:
    'co:INFORMATION_PORTAL_NEW_PROMOS_DAYS_COUNT',
  INFORMATION_PORTAL_ACTIVE_PROMOS_DAYS_COUNT:
    'co:INFORMATION_PORTAL_ACTIVE_PROMOS_DAYS_COUNT',
  INFORMATION_PORTAL_INACTIVE_PROMOS_DAYS_COUNT:
    'co:INFORMATION_PORTAL_INACTIVE_PROMOS_DAYS_COUNT',
  APPLICATION_LINK_IN_APP_REDIRECTION_OPTIONS:
    'co:APPLICATION_LINK_IN_APP_REDIRECTION_OPTIONS',
  MARKET_OPEN_SLOTTED_DELIVERY_OPTION_BOTTOM_SHEET: 'co:MARKET_OPEN_SLOTTED_DELIVERY_OPTION_BOTTOM_SHEET',
  ACTIVE_DOMAIN_TYPES: 'co:panel:ACTIVE_DOMAIN_TYPES',
  MARKETING_SMS_CONFIG: 'co:panel:MARKETING_SMS_CONFIG',
  MARKETING_EMAIL_CONFIG: 'co:panel:MARKETING_EMAIL_CONFIG',
  ACTIVE_INTEGRATION_TYPES: 'co:panel:ACTIVE_INTEGRATION_TYPES',
  EMAIL_SERVICE_SENDER_EMAIL: 'co:panel:EMAIL_SERVICE_SENDER_EMAIL',
  EMAIL_SERVICE_SENDER_NAME: 'co:panel:EMAIL_SERVICE_SENDER_NAME',
  BANNER_ELIGIBLE_IN_APP_PAGES: 'co:panel:BANNER_ELIGIBLE_IN_APP_PAGES',
  ANNOUNCEMENT_ELIGIBLE_IN_APP_PAGES: 'co:panel:ANNOUNCEMENT_ELIGIBLE_IN_APP_PAGES',
  POPUP_ELIGIBLE_IN_APP_PAGES: 'co:panel:POPUP_ELIGIBLE_IN_APP_PAGES',
  TRANSACTIONAL_NOTIFICATION_SOUND_TYPES: 'co:panel:TRANSACTIONAL_NOTIFICATION_SOUND_TYPES',
  NPS_CONFIG: 'co:intra:general:NPS_CONFIG',
  WATER_QUEUE_INTERVAL_CONFIG: 'co:water:QUEUE_INTERVAL_CONFIG',
  WATER_ETA_INTERVAL_CONFIG: 'co:water:DURATION',
  SLOTTED_ORDER_ACTIVE_DOMAIN_TYPES: 'co:panel:SLOTTED_ORDER_ACTIVE_DOMAIN_TYPES',
  FRAUD_SEGMENT_OPTIONS: 'co:panel:FRAUD_SEGMENT_OPTIONS',
};

export const MARKET_CONFIG_QUERY_TYPES = {
  ARRAY: 'Array',
  BOOLEAN: 'Boolean',
  NUMBER: 'Number',
  OBJECT: 'Object',
  STRING: 'String',
};

export const DEFAULT_MAP_OPTIONS = {
  CENTER: [41.0211, 29.004], // Maiden's Tower in the Bosporus (Istanbul)
  BOUNDS_ZOOM_RATIO: 2,
  ZOOM_LEVEL: 12,
};

export const ORDER_PAYMENT_METHODS = {
  1: 'MASTERPASS',
  2: 'BKM_EXPRESS',
  3: 'ON_DELIVERY_CREDIT_CARD',
  4: 'CASH',
  5: 'MULTINET_CARD',
  6: 'SODEXO_CARD',
  7: 'SODEXO_VOUCHER',
  8: 'TICKET_CARD',
  9: 'TICKET_VOUCHER',
  10: 'SETCARD_CARD',
  11: 'METROPOL_CARD',
  12: 'PAYE_CARD',
  13: 'ISTANBUL_CARD',
  14: 'ADYEN',
  15: 'MOBILEXPRESS',
  17: 'SODEXO_PASS_MOBILE_APP',
  18: 'CIO_CARD',
};

export const WATER_OS = {
  UNKNOWN: 0,
  IOS: 1,
  ANDROID: 2,
};

export const WATER_CUSTOMER_STATUS = {
  NONE: 0,
  FREE: 100,
  WAITING_ORDER: 300,
  REACHED: 800,
  DELIVERED: 900,
  CANCELED: 1000,
};

export const WATER_PAYMENT_TYPES = {
  ONLINE_CREDIT_CARD: 1,
  ONLINE_BKM: 2,
  CREDIT_OR_DEBIT_CARD_AT_DELIVERY: 3,
  CASH_AT_DELIVERY: 4,
};

export const WATER_PAYMENT_STATUS = {
  NONE: 0,
  NOT_PAID: 1,
  PENDING_PAYMENT: 2,
  PAID: 3,
  PAYMENT_ERROR: 4,
  PENDING_REFUND: 5,
  REFUNDED: 6,
  PARTIAL_REFUND_SUCCEDED: 7,
  PENDING_PARTIAL_REFUND: 8,
  ON_DELIVERY_PAYMENT: 9,
};

export const DATA_UNIT_SIZE = {
  BYTES_IN_A_KB: 1024,
  KBYTES_IN_A_MB: 1024,
};

export const LAYOUT_DIRECTION = {
  HORIZONTAL: 'horizontal',
  VERTICAL: 'vertical',
};

export const GATEWAY_ERRORS = {
  UNKNOWN_ERROR: { statusCode: 500 },
  MISSING_PARAMS: { statusCode: 400 },
  INVALID_PARAMS: { statusCode: 400 },
  CLIENT_HAS_NO_DATA_IN_THIS_COUNTRY: {
    statusCode: 400,
    errorCode: 1000,
  },
  YOU_SHALL_NOT_PASS: {
    statusCode: 400,
    errorCode: 2000,
  },
  NOSQL_INJECTION: { statusCode: 403 },
  UNAUTHORIZED: { statusCode: 401 },
  USER_COUNTRY_NOT_MATCH: { statusCode: 400 },
};

export const MIME_TYPE = {
  JPEG: 'image/jpeg',
  PNG: 'image/png',
  WEBP: 'image/webp',
  GIF: 'image/gif',
  MP4: 'video/mp4',
  MPEG: 'video/mpeg',
  XLS: 'application/vnd.ms-excel',
  XLSX: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',
  CSV: 'text/csv',
  ALL_IMAGES: 'image/*',
  ALL_VIDEOS: 'video/*',
  PDF: 'application/pdf',
  DOC: 'application/msword',
  DOCX: 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
  HTML: 'text/html',
} as const;

export const LOCATION_WRITE_OFF_STATUSES = {
  CREATED: 100,
  APPROVED: 200,
  CANCELED: 300,
  REJECTED: 400,
};

export const MOBILE_WIDTH_IN_PX = 768;

export const WAREHOUSE_STATE = {
  ARCHIVED: 100,
  INACTIVE: 200,
  ACTIVE: 300,
};

export const LOCALS_ORDER_STATUS_COLOR_MAP = {
  DEFAULT: 'default',
  SUCCESS: '#5cb85c',
  DANGER: '#d9534f',
};

export const FOOD_ORDER_ORDER_STATUS_COLOR_MAP = {
  DEFAULT: 'default',
  SUCCESS: '#5cb85c',
  DANGER: '#d9534f',
};

export const ANTD_TABS_ACTION_TYPES = {
  ADD: 'add',
  REMOVE: 'remove',
};

export const PROMO_STATUS = {
  INACTIVE: 1,
  ACTIVE: 2,
  EXPIRED: 3,
  ORDER_LIMIT_REACHED: 4,
  CLIENT_LIMIT_REACHED: 5,
  USED: 6,
  PREPARING: 7,
};

export const COUNTRIES_DIALING_CODE = {
  US: 1,
  GB: 44,
};

export const PAYMENT_METHOD_BY_COUNTRY = {
  NOT_USING_IBAN: [COUNTRIES_DIALING_CODE.US, COUNTRIES_DIALING_CODE.GB],
  USING_ACCOUNT_NUMBER: [COUNTRIES_DIALING_CODE.US, COUNTRIES_DIALING_CODE.GB],
  USING_ROUTING_NUMBER: [COUNTRIES_DIALING_CODE.US],
  USING_SORT_CODE: [COUNTRIES_DIALING_CODE.GB],
};

export const GLOBAL_PROMO_STATUS = {
  ACTIVE: 2,
  INACTIVE: 1,
  EXPIRED: 3,
  ORDER_LIMIT_REACHED: 4,
  CLIENT_LIMIT_REACHED: 5,
  USED: 6,
  PREPARING: 7,
};

export const DAILY_SUMMARY = {
  INFORMATION_TYPE: {
    ORDER_COUNT: 1,
    MISSED_ORDER: 2,
    ORDER_FINANCIALS: 3,
    TOTAL_DEMAND: 5,
    TAB_CLICK: 6,
    CARBOY_ORDER_COUNT: 7,
    OPERATIONAL_STATS: 8,
    APP_OPEN_CITY: 9,
    APP_OPEN_COUNTRY: 10,
  },
  INTERVAL_TYPE: { DAILY: 1 },
};
export const CITY_ID = { ISTANBUL: '55999ad00000010001000000' };

export const COURIER_TASK_STATUS = {
  COMPLETED: 'COMPLETED',
  ASSIGNED: 'ASSIGNED',
  PENDING: 'PENDING',
  CANCELLED: 'CANCELLED',
  CANCEL_ALERT: 'CANCEL_ALERT',
  EXPIRED: 'EXPIRED',
};

export const COURIER_TASKS_ICON_NAME = {
  CLIPBOARD_CHECK_ICON: 'clipboardCheck',
  OFFICE_BUILDING_ICON: 'officeBuilding',
  HAND_ICON: 'hand',
  HOME_ICON: 'home',
  CHECK_CIRCLE_ICON: 'checkCircle',
};

export const COURIER_TASK_TYPE = {
  PICKUP: 'Pickup',
  DELIVERY: 'Delivery',
};

export const COURIER_TASKS_ICON_OPACITY = {
  TRANSPARENT: 0.5,
  NOT_TRANSPARENT: 1,
};

export const COURIER_TASKS_ICON_INDEX = {
  VERIFIED: 0,
  HANDOVER: 1,
  REACHED_TO_CLIENT: 2,
  DELIVERED: 3,
};

export const COURIER_TASK_METHOD = {
  COURIER_VERIFY_AFTER_CHECKOUT_DATE: 'courierVerifyAfterCheckoutDate',
  COURIER_REACHED_TO_RESTAURANT: 'courierReachedToRestaurant',
  COURIER_VERIFY_FOOD_ORDER: 'courierVerifyFoodOrder',
  COURIER_REACHED_TO_CLIENT: 'courierReachedToClient',
  COURIER_DELIVERED_TO_CLIENT: 'courierDeliveredToClient',
  MARKET_COURIER_VERIFYING: '/courier/handover-order',
  MARKET_COURIER_GATHERING: '/courier/depart-order',
  MARKET_COURIER_REACHED: '/courier/reach-order',
  MARKET_COURIER_DELIVERED: '/courier/deliver-order',
  FINANCE_COURIER_VERIFYING: '/finance-delivery/{courierId}/handover-order',
  FINANCE_COURIER_GATHERING: '/finance-delivery/{courierId}/depart-order',
  FINANCE_COURIER_REACHED: '/finance-delivery/{courierId}/reach-order',
  FINANCE_COURIER_DELIVERED: '/finance-delivery/{courierId}/deliver-order',
};

export const COURIER_TASK_STATUS_NAME = {
  COURIER_VERIFY_STATUS: 'VERIFY',
  COURIER_REACHED_TO_SHOP_STATUS: 'REACHED_TO_SHOP',
  COURIER_HANDOVER_STATUS: 'HANDOVER',
  COURIER_REACHED_STATUS: 'REACHED',
  COURIER_DELIVERED_STATUS: 'DELIVERED',
};

export const COURIER_SERVICE_DOMAIN_TYPES = {
  GETIR10: 1,
  FOOD: 2,
  GETIR_MARKET: 3,
  GETIR_VOYAGER: 4,
  GETIR_LOCALS: 6,
};

export const COURIER_RETURN_TASKS_ICON_INDEX = {
  VERIFIED: 0,
  REACHED_TO_CLIENT: 1,
  RECEIVED: 2,
  REACHED_TO_SHOP: 3,
  DELIVERED: 4,
};

export const COURIER_RETURN_HISTORY = {
  ON_WAY: 'COURIER_ON_WAY',
  REACHED_TO_CUSTOMER: 'COURIER_REACHED_TO_CUSTOMER',
  RECEIVED_RETURN: 'COURIER_RECEIVES_RETURN',
  REACHED_TO_SHOP: 'COURIER_REACHED_TO_SHOP',
  DELIVER_TO_SHOP: 'COURIER_OR_RUNNER_DELIVER_TO_SHOP',
};

export const EMPLOYEE_DEPARTMENT_LEVELS = {
  MAIN_DEPARTMENT: 'main',
  SUB_DEPARTMENT_FIRST: 'firstLevelSub',
} as const;

export const ARTISAN_ACTIVE_ORDER_QUEUED_STATUS = 0;

export const DEFAULT_PAGINATION_VALUES = {
  currentPage: 1,
  rowsPerPage: 10,
};

export const VALIDATE_STATUS = {
  ERROR: 'error',
  SUCCESS: 'success',
};

export const LANGUAGE_CODES = { US: 'en-US', FR: 'FR', TR: 'TR' };

export const MARKET_FRANCHISE_USER_TYPE = {
  OWNER: 1,
  USER: 2,
};

export const ROLE_LIST_TAB_PANE_KEY = {
  ALL_ROLES: 'allRoles',
  MY_ROLES: 'myRoles',
  ROLE_REQUESTS: 'roleRequests',
  TEAMMATE_ROLES: 'teammateRoles',
} as const;

export const FOOD_INSIGHT_REFUND_STATUS_MAP = {
  PENDING: 1,
  SUCCESS: 2,
  FAIL: 3,
};

export const FOOD_INSIGHT_REFUND_STATUS_STYLE = {
  1: 'insightStatusWarning',
  2: 'insightStatusSuccess',
  3: 'insightStatusDanger',
};

export const FOOD_SHOW_DETAIL_TABLE_BY_REFUND_TYPE = 3;

export const FOOD_INSIGHT_REFUND_ERROR_CODE = 41;
export const FRAUD_ORDER_STATUS = {
  WAITING_FOR_PROCESSING: 100,
  LEGITIMATE_ORDER: 200,
  FRAUD_ORDER: 300,
  UNDETERMINED: 400,
  UNDER_REVIEW: 500,
};

export const GETIR_DOMAIN_URL = 'getir.com';

// @TODO this will be updated/removed when cancel order feature is migrated to the global panel
export const PROD_FRAUND_REASON_ID = '60123456daa0f61a180972c5';

export const DEV_FRAUND_REASON_ID = '628f2c13db668f22043570a2';

export const PLATFORM_DEVICE_TYPES = {
  MOBILE: 1,
  WEBSITE: 2,
  JET: 3,
};

export const INTEGRATION_TYPE = {
  GETIR: 1,
  JET: 2,
  GORILLAS: 3,
  UBER: 4,
  GRUBHUB: 5,
  N11: 6,
};

export const SORT_OPTIONS = {
  KEYS: { NAME: 'name' },
  DIRECTIONS: {
    TEXT: {
      ASC: 'asc',
      DESC: 'desc',
    },
    NUMBER: {
      ASC: 1,
      DESC: -1,
    },
  },
};

export const WORK_STATUS_SHIFT = 1;
export const WORK_STATUS_SUPPORT = 2;

export const PAGINATION_MODES = {
  CURSOR: 'cursor',
  OFFSET: 'offset',
};
export const TIMEZONE_ISTANBUL = 'Europe/Istanbul';

export const GETIR_DRIVE_EXTERNAL_SOURCE = {
  GETIR: 'Getir',
  BITAKSI: 'BiTaksi',
  MOOV: 'MOOV',
};

export const GETIR_DRIVE_EXTERNAL_SOURCE_GETIR = 'GETIR';
export const GETIR_DRIVE_EXTERNAL_SOURCE_BITAKSI = 'BITAKSI';
export const GETIR_DRIVE_EXTERNAL_SOURCE_MOOV = 'MOOV';

export const GETIR_DRIVE_EXTERNAL_SOURCE_OPTIONS = [
  { value: 'GETIR', label: 'Getir' },
  { value: 'MOOV', label: 'MOOV' },
  { value: 'BITAKSI', label: 'BiTaksi' },
];

export const ORDER_INVOICE_STATUS = {
  NOT_INVOICED: 0,
  INVOICE_PENDING: 1,
  INVOICED: 2,
  CANCELED_INVOICE_PENDING: 3,
  CANCELED_INVOICE: 4,
};

export const FEE_LAYER_TYPE = {
  PEAK_HOURS: 'SURGE_FEE_LAYERS',
  REGULAR: 'LAYERS',
};

export const ORDER_FEE_TYPE = {
  DELIVERY_FEE: 'ORDER_DELIVERY_FEE',
  SERVICE_FEE: 'ORDER_SERVICE_FEE',
};

export const PERSON_CONTRACT_GROUP_ID = {
  break: 'break',
  leave: 'leave',
  genInfo: 'genInfo',
  schdConfig: 'schdConfig',
  compConfig: 'compConfig',
};

export const GETIR_LOCAL_MERCHANT_TYPES = {
  ALL_CHAIN_MERCHANTS: '1',
  SPECIFIC_CHAIN_MERCHANT: 2,
  SPECIFIC_MERCHANT_TYPE: 3,
};
export const GETIR_MARKET_ORDER = {
  MH: {
    PROBLEMS: {
      STATUS: {
        ACTIVE: 200,
        COMPLETED: 300,
      },
      REASONS: { OTHER: 100 },
    },
  },
};

export const DISCOUNT_AMOUNT_DURATION = 180;
export const CLIENT_FEEDBACK_SOURCE_TYPE_WAREHOUSE = 4;
export const DEV_MISSING_PRODUCT_REASON_ID = '606ee9c16ebf4e9ffdfa16d5';
export const PROD_MISSING_PRODUCT_REASON_ID = '5d2a150ec015a02141e17ac9';

export const MILLISECONDS_IN_A_SECOND = 1_000;
export const SECONDS_IN_A_MINUTE = 60;
export const MINUTES_IN_A_HOUR = 60;
export const HOURS_IN_A_DAY = 24;
export const DAYS_IN_A_WEEK = 7;
export const MINUTES_IN_A_DAY = MINUTES_IN_A_HOUR * HOURS_IN_A_DAY;
export const MS_IN_A_DAY = (
  MILLISECONDS_IN_A_SECOND *
  SECONDS_IN_A_MINUTE *
  MINUTES_IN_A_HOUR *
  HOURS_IN_A_DAY
);
export const ORDER_PAYMENT_STATUS_PENDING_REFUND = 5;

export const MARKER_Z_INDEXES = {
  WAREHOUSE: 10000000,
  G10_ORDER_MARKER: 20000000,
  G30_ORDER_MARKER: 20000000,
  FOOD_ORDER_MARKER: 20000000,
  VOYAGER_ORDER_MARKER: 20000000,
  COURIER: 30000000,
  QUEUED_ORDER_MARKER: 60000000,
  FAIL_G10_ORDER_MARKER: 70000000,
  FAIL_G30_ORDER_MARKER: 70000000,
  FAIL_FOOD_ORDER_MARKER: 70000000,
  FAIL_VOYAGER_ORDER_MARKER: 70000000,
};

export const GETIR_SELECT_MEMBERSHIP_STATUSES = {
  CANCELLED: 0,
  ACTIVE: 1,
  CANCEL_REQUESTED: 2,
  UNPAID: 3,
  ON_HOLD: 4,
  BLOCKED: 5,
};

export const GETIR_SELECT_MEMBERSHIP_DATE_TYPES = { LAST_CANCEL: 0, REGISTER: 1 };

export const GETIR_SELECT_PAYMENT_TYPES = {
  FREE: 0,
  DISCOUNTED: 1,
  PAID: 2,
};

export const GETIR_SELECT_BENEFIT_TYPES = {
  FREE_DELIVERY: 0,
  GETIR_FINANCED: 1,
  SUPPLIER_FINANCED: 2,
};

export const COMMUNICATION_CHANNEL_TYPES = {
  PUSH_NOTIFICATION: 1,
  SMS: 2,
  EMAIL: 3,
};

export const EMPLOYEE_LEAVE_STATUSES = {
  CANCELED: 0,
  PENDING: 100,
  APPROVED: 200,
  DECLINED: 300,
  PENDING_DOCUMENT: 400,
};

export const PAYMENT_PROVIDERS = {
  MASTERPASS: 'masterpass',
  CHECKOUT: 'checkout',
  BKM: 'bkm',
  ADYEN: 'adyen',
  GETIR_MONEY: 'getirmoney',
  SODEXO: 'sodexo',
  TICKET: 'ticket',
  MOBILE_EXPRESS: 'mobilexpress',
  MULTINET: 'multinet',
  GETIRBNPL: 'getirbnpl',
};

export const GETIR_UP_TRAINING_STATUSES = {
  0: {
    tr: 'Tamamlamamış',
    en: 'Not completed',
  },
  1: {
    tr: 'Tamamlanmış',
    en: 'Completed',
  },
  2: {
    tr: 'Belirsiz',
    en: 'Unknown',
  },
};

export const FEE_SOURCE = {
  FIXED_DELIVERY_FEE: 'FixedDeliveryFee',
  LAYERED_DELIVERY_FEE: 'LayeredDeliveryFee',
  DYNAMIC_DELIVERY_FEE: 'DynamicDeliveryFee',
  ZONE_BASED_FIXED_DELIVERY_FEE: 'ZoneBasedFixedDeliveryFee',
  ZONE_BASED_LAYERED_DELIVERY_FEE: 'ZoneBasedLayeredDeliveryFee',
  FIXED_SERVICE_FEE: 'FixedServiceFee',
  LAYERED_SERVICE_FEE: 'LayeredServiceFee',
  DYNAMIC_SERVICE_FEE: 'DynamicServiceFee',
  BASKET_AMOUNT: 'BASKET_AMOUNT',
  ZONE_BASED_BASKET_AMOUNT: 'ZONE_BASED_BASKET_AMOUNT',
};

export const API_GATEWAY_ERROR_CODES = { USER_COUNTRY_NOT_MATCH: 1001 } as const;

export const MARKET_BASKET_STATUSES = {
  INCOMPLETE: 100,
  ABORTED: 200,
  BROWSING: 300,
  COMPLETED: 325,
};

export const WORKFORCE_EMPLOYEE_TYPES = {
  COURIER: 1,
  PICKER: 2,
};

export const DELIVERY_THIRD_PARTY_PROVIDER_TYPES = { STUART: 2 };

export const geoFenceGroups = {
  1000: {
    en: 'Return to Warehouse',
    tr: 'Depoya Dönüş',
  },
};

export const WAREHOUSE_LOCATION_STATES = {
  ARCHIVED: 100,
  INACTIVE: 200,
  ACTIVE: 300,
};
