import { createActions } from 'reduxsauce';

import { REDUX_KEY } from '@shared/shared/constants';

export const { Types, Creators } = createActions({
  init: {},
  getCountriesRequest: {},
  getCountriesSuccess: { data: [] },
  getCountriesFailure: { error: null },
  getOperationalCountriesRequest: null,
  getOperationalCountriesSuccess: { data: [] }, // couldn't figure how to use type here
  getOperationalCountriesFailure: { error: null },
  getCountryGroupsRequest: {},
  getCountryGroupsSuccess: { data: [] },
  getCountryGroupsFailure: { error: null },
  getCitiesRequest: { countryId: null },
  getCitiesSuccess: { data: [] },
  getCitiesFailure: { error: null },
  getRegionsRequest: { cityId: null },
  getRegionsSuccess: { data: [] },
  getRegionsFailure: { error: null },
  getMainStoresRequest: {},
  getMainStoresSuccess: { data: [] },
  getMainStoresFailure: { error: null },
  getNonagreementWarehousesRequest: {},
  getNonagreementWarehousesSuccess: { data: [] },
  getNonagreementWarehousesFailure: { error: null },
  getWarehousesRequest: { countryId: null, cityId: null, domainTypes: null },
  getWarehousesSuccess: { data: [] },
  getWarehousesFailure: { error: null },
  getActiveWarehousesRequest: { countryId: null, cityId: null, domainTypes: null },
  getActiveWarehousesSuccess: { data: [] },
  getActiveWarehousesFailure: { error: null },
  getFilteredWarehousesRequest: {
    fields: undefined,
    domainTypes: undefined,
    cities: undefined,
    states: undefined,
    statuses: undefined,
    warehouseTypes: undefined,
    name: undefined,
    limit: undefined,
    offset: undefined,
    populate: undefined,
  },
  getFilteredWarehousesSuccess: { data: [] },
  getFilteredWarehousesFailure: { error: null },
  getFilteredWarehousesForDivisionRequest: { cities: undefined, domainTypes: undefined, fields: undefined },
  getFilteredWarehousesForDivisionSuccess: { data: [] },
  getFilteredWarehousesForDivisionFailure: { error: null },
  getBrandsRequest: { limit: null, offset: null },
  getBrandsSuccess: { data: [] },
  getBrandsFailure: { error: null },
  getSuppliersRequest: { limit: null, offset: null, fields: undefined },
  getSuppliersSuccess: { data: [] },
  getSuppliersFailure: { error: null },
  getMarketProductCategoriesRequest: { limit: null, offset: null, isSubCategory: null, status: undefined, fields: undefined },
  getMarketProductCategoriesSuccess: { data: [] },
  getMarketProductCategoriesFailure: { error: null },
  getMarketProductSubCategoriesRequest: { parent: undefined, parents: undefined, limit: null, offset: null, status: undefined, fields: undefined },
  getMarketProductSubCategoriesSuccess: { data: [] },
  getMarketProductSubCategoriesFailure: { error: null },
  clearMarketProductSubCategories: {},
  getMarketProductsRequest: {
    isActive: undefined,
    statusList: undefined,
    limit: null,
    offset: null,
    queryText: null,
    filterOptions: {},
    fields: [],
    ids: [],
    populate: undefined,
    useAPIGatewayCache: undefined,
    supplyFieldsPopulateOptions: {},
    shouldGetSuppliersAndManufacturerFromNewPricingService: undefined,
  },
  getMarketProductsSuccess: { data: [] },
  getMarketProductsFailure: { error: null },
  clearMarketProducts: {},
  getMarketProductMasterCategoriesRequest: { queryText: undefined, level: undefined, limit: undefined, offset: undefined },
  getMarketProductMasterCategoriesSuccess: { data: [] },
  getMarketProductMasterCategoriesFailure: { error: null },
  getMarketFranchisesRequest: {},
  getMarketFranchisesSuccess: { data: [] },
  getMarketFranchisesFailure: { error: null },
  getTransferGroupsRequest: { limit: null, offset: null },
  getTransferGroupsSuccess: { data: [] },
  getTransferGroupsFailure: { error: null },
  getUserOwnedPagesRequest: { userId: null },
  getUserOwnedPagesSuccess: { data: [] },
  getUserOwnedPagesFailure: { error: null },
  getUserOwnedPagesReset: {},
  getAllPagesRequest: {},
  getAllPagesSuccess: {},
  getAllPagesFailure: { error: null },
  setCurrentPagePermKey: { permKey: null },
  getCurrentPageRequest: { permKey: null, showError: false },
  getCurrentPageSuccess: { permKey: null, data: {} },
  getCurrentPageFailure: { permKey: null, error: null },
  getCurrentPageDocsRequest: { permKey: null, pageId: null, isActive: true, showError: false },
  getCurrentPageDocsSuccess: { permKey: null, data: [] },
  getCurrentPageDocsFailure: { permKey: null, error: null },
  getMyPermissionsRequest: {},
  getMyPermissionsSuccess: { data: [] },
  getMyPermissionsFailure: { error: null },
  setMyPermissions: { data: [] },
  getFavoriteDocumentsRequest: null,
  getFavoriteDocumentsSuccess: { data: [] },
  getFavoriteDocumentsFailure: { error: null },
  addFavoriteDocumentRequest: { _id: null },
  addFavoriteDocumentSuccess: { data: {}, _id: null },
  addFavoriteDocumentFailure: { error: null, _id: null },
  removeFavoriteDocumentRequest: { _id: null },
  removeFavoriteDocumentSuccess: { data: {}, _id: null },
  removeFavoriteDocumentFailure: { error: null, _id: null },
  getRolePermissionsRequest: { roleId: null },
  getRolePermissionsSuccess: { data: [] },
  getRolePermissionsFailure: { error: null },
  getRolePermissionsReset: {},
  getRolesRequest: { limit: 9999, offset: 0, queryText: '', isActive: undefined, roleIds: [], sortOptions: undefined },
  getRolesSuccess: { data: [] },
  getRolesFailure: { error: null },
  getRoleUsersRequest: { roleId: null, isActive: null, populateEmployeeInfo: false },
  getRoleUsersSuccess: { data: [] },
  getRoleUsersFailure: { error: null },
  getUserRolesRequest: { userId: null },
  getUserRolesSuccess: { data: [] },
  getUserRolesFailure: { error: null },
  getUserRolesReset: {},
  getUserOwnedRolesRequest: { userId: null },
  getUserOwnedRolesSuccess: { data: [] },
  getUserOwnedRolesFailure: { error: null },
  getRoleUsersReset: {},
  getCompaniesRequest: {},
  getCompaniesSuccess: { data: [] },
  getCompaniesFailure: { error: null },
  getSelectedCountryTimezone: { data: '' },
  setSelectedCities: { data: [] },
  setSelectedDomainTypes: { data: [] },
  setSelectedDomainType: { data: 1 },
  getDivisionsCitiesRequest: { division: null },
  getDivisionsCitiesSuccess: { data: [] },
  getDivisionsCitiesFailure: { error: null },
  getDivisionsCountriesRequest: { division: null },
  getDivisionsCountriesSuccess: { data: [] },
  getDivisionsCountriesFailure: { error: null },
  getDivisionRequest: { countryIds: [], divisionId: null },
  getDivisionSuccess: { data: null },
  getDivisionFailure: { error: null },
  getDivisionsRequest: { countryIds: [], divisionIds: [] },
  getDivisionsSuccess: { data: null },
  getDivisionsFailure: { error: null },
  getAllDivisionsRequest: {}, // app init action
  getAllDivisionsSuccess: { data: null },
  getAllDivisionsFailure: { error: null },
  getConfigWithKeyRequest: { body: null },
  getConfigWithKeySuccess: { data: {} },
  getConfigWithKeyFailure: { error: null },
  getAvailableDomainTypesForCountrySelectorRequest: { body: null },
  getAvailableDomainTypesForCountrySelectorSuccess: { data: {} },
  getAvailableDomainTypesForCountrySelectorFailure: { error: null },
  getAvailableIntegrationTypesForCountryRequest: { countryId: null },
  getAvailableIntegrationTypesForCountrySuccess: { data: {} },
  getAvailableIntegrationTypesForCountryFailure: { error: null },
  getSlottedOrderActiveDomainTypesRequest: {},
  getSlottedOrderActiveDomainTypesSuccess: { data: {} },
  getSlottedOrderActiveDomainTypesFailure: { error: null },
}, { prefix: `${REDUX_KEY.COMMON}_` });
